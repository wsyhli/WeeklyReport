2022-03-02 09:52:59,497 [main] INFO  -[StartupInfoLogger.java:55]- Starting WeeklyReportApplication using Java 1.8.0_291 on DESKTOP-AF5B2DF with PID 23040 (E:\MyGitHubRepository\WeeklyReport\target\classes started by yhli3 in E:\MyGitHubRepository\WeeklyReport)
2022-03-02 09:52:59,500 [main] DEBUG -[StartupInfoLogger.java:56]- Running with Spring Boot v2.5.3, Spring v5.3.9
2022-03-02 09:52:59,501 [main] INFO  -[SpringApplication.java:659]- No active profile set, falling back to default profiles: default
2022-03-02 09:53:00,635 [main] INFO  -[RepositoryConfigurationDelegate.java:262]- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-03-02 09:53:00,637 [main] INFO  -[RepositoryConfigurationDelegate.java:132]- Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-03-02 09:53:00,662 [main] INFO  -[RepositoryConfigurationDelegate.java:201]- Finished Spring Data repository scanning in 10 ms. Found 0 Redis repository interfaces.
2022-03-02 09:53:00,938 [main] INFO  -[PostProcessorRegistrationDelegate.java:376]- Bean 'redisConfig' of type [com.liyuehong.weeklyreport.configuration.RedisConfig$$EnhancerBySpringCGLIB$$3d4f0d2b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-02 09:53:01,211 [main] INFO  -[TomcatWebServer.java:108]- Tomcat initialized with port(s): 8082 (http)
2022-03-02 09:53:01,222 [main] INFO  -[DirectJDKLog.java:173]- Initializing ProtocolHandler ["http-nio-8082"]
2022-03-02 09:53:01,223 [main] INFO  -[DirectJDKLog.java:173]- Starting service [Tomcat]
2022-03-02 09:53:01,224 [main] INFO  -[DirectJDKLog.java:173]- Starting Servlet engine: [Apache Tomcat/9.0.50]
2022-03-02 09:53:01,394 [main] INFO  -[DirectJDKLog.java:173]- Initializing Spring embedded WebApplicationContext
2022-03-02 09:53:01,394 [main] INFO  -[ServletWebServerApplicationContext.java:290]- Root WebApplicationContext: initialization completed in 1842 ms
2022-03-02 09:53:01,906 [main] INFO  -[DruidDataSourceAutoConfigure.java:56]- Init DruidDataSource
2022-03-02 09:53:02,042 [main] INFO  -[DruidDataSource.java:930]- {dataSource-1} inited
2022-03-02 09:53:02,563 [main] INFO  -[EndpointLinksResolver.java:58]- Exposing 1 endpoint(s) beneath base path '/actuator'
2022-03-02 09:53:02,610 [main] INFO  -[RedisConfig.java:113]- 初始化 -> [Redis CacheErrorHandler]
2022-03-02 09:53:02,711 [main] INFO  -[DefaultSecurityFilterChain.java:51]- Will secure Ant [pattern='/js/**'] with []
2022-03-02 09:53:02,711 [main] INFO  -[DefaultSecurityFilterChain.java:51]- Will secure Ant [pattern='/css/**'] with []
2022-03-02 09:53:02,711 [main] INFO  -[DefaultSecurityFilterChain.java:51]- Will secure Ant [pattern='/images/**'] with []
2022-03-02 09:53:02,711 [main] INFO  -[DefaultSecurityFilterChain.java:51]- Will secure Ant [pattern='/swagger-ui.html'] with []
2022-03-02 09:53:02,712 [main] INFO  -[DefaultSecurityFilterChain.java:51]- Will secure Ant [pattern='/webjars/**'] with []
2022-03-02 09:53:02,712 [main] INFO  -[DefaultSecurityFilterChain.java:51]- Will secure Ant [pattern='/v2/**'] with []
2022-03-02 09:53:02,712 [main] INFO  -[DefaultSecurityFilterChain.java:51]- Will secure Ant [pattern='/swagger-resources/**'] with []
2022-03-02 09:53:02,753 [main] INFO  -[PropertySourcedRequestMappingHandlerMapping.java:69]- Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2022-03-02 09:53:02,809 [main] INFO  -[DefaultSecurityFilterChain.java:51]- Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5d717f19, org.springframework.security.web.context.SecurityContextPersistenceFilter@45cd8607, org.springframework.security.web.header.HeaderWriterFilter@3b8507df, org.springframework.web.filter.CorsFilter@18715bb, org.springframework.security.web.authentication.logout.LogoutFilter@66f2ec1c, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@667797f, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@c497a55, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@19bf47fc, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2a19a0fe, org.springframework.security.web.session.SessionManagementFilter@451816fd, org.springframework.security.web.access.ExceptionTranslationFilter@7185e611, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7e848aea]
2022-03-02 09:53:03,772 [main] INFO  -[DirectJDKLog.java:173]- Starting ProtocolHandler ["http-nio-8082"]
2022-03-02 09:53:03,782 [main] INFO  -[TomcatWebServer.java:220]- Tomcat started on port(s): 8082 (http) with context path ''
2022-03-02 09:53:03,783 [main] INFO  -[DocumentationPluginsBootstrapper.java:160]- Context refreshed
2022-03-02 09:53:03,798 [main] INFO  -[DocumentationPluginsBootstrapper.java:163]- Found 1 custom documentation plugin(s)
2022-03-02 09:53:03,824 [main] INFO  -[ApiListingReferenceScanner.java:41]- Scanning for api listing references
2022-03-02 09:53:03,928 [main] WARN  -[ParameterDataTypeReader.java:92]- Trying to infer dataType int[]
2022-03-02 09:53:04,606 [main] INFO  -[ScheduledAnnotationBeanPostProcessor.java:309]- No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2022-03-02 09:53:04,625 [main] INFO  -[StartupInfoLogger.java:61]- Started WeeklyReportApplication in 5.458 seconds (JVM running for 6.243)
2022-03-02 09:53:05,061 [RMI TCP Connection(5)-192.168.196.22] INFO  -[DirectJDKLog.java:173]- Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-03-02 09:53:05,061 [RMI TCP Connection(5)-192.168.196.22] INFO  -[FrameworkServlet.java:525]- Initializing Servlet 'dispatcherServlet'
2022-03-02 09:53:05,063 [RMI TCP Connection(5)-192.168.196.22] INFO  -[FrameworkServlet.java:547]- Completed initialization in 2 ms
2022-03-02 10:00:49,308 [http-nio-8082-exec-1] DEBUG -[BaseJdbcLogger.java:137]- ==>  Preparing: select id, username, password, enabled, email, regTime, avatar_name from user where username=?
2022-03-02 10:00:49,341 [http-nio-8082-exec-1] DEBUG -[BaseJdbcLogger.java:137]- ==> Parameters: admin(String)
2022-03-02 10:00:49,453 [http-nio-8082-exec-1] TRACE -[BaseJdbcLogger.java:143]- <==    Columns: id, username, password, enabled, email, regTime, avatar_name
2022-03-02 10:00:49,454 [http-nio-8082-exec-1] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 1, admin, $2a$16$Fnenz3KKbv8Mh7N6CB2c5uTK8a4JC3wUe/sDV7z8n1Uq1vJdaUZYS, 1, null, null, 2022-02-26b0127966d90d4ace9f4253ab69563fd0.png
2022-03-02 10:00:49,457 [http-nio-8082-exec-1] DEBUG -[BaseJdbcLogger.java:137]- <==      Total: 1
2022-03-02 10:00:49,461 [http-nio-8082-exec-1] DEBUG -[BaseJdbcLogger.java:137]- ==>  Preparing: SELECT r.* FROM role AS r,user_role AS ur WHERE r.id = ur.`role_id` AND ur.`user_id`=?;
2022-03-02 10:00:49,463 [http-nio-8082-exec-1] DEBUG -[BaseJdbcLogger.java:137]- ==> Parameters: 1(Integer)
2022-03-02 10:00:49,539 [http-nio-8082-exec-1] TRACE -[BaseJdbcLogger.java:143]- <==    Columns: id, nameZh, name
2022-03-02 10:00:50,043 [http-nio-8082-exec-1] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 1, 管理员, admin
2022-03-02 10:00:50,045 [http-nio-8082-exec-1] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 2, 普通用户, user
2022-03-02 10:00:50,046 [http-nio-8082-exec-1] DEBUG -[BaseJdbcLogger.java:137]- <==      Total: 2
2022-03-02 10:00:58,938 [http-nio-8082-exec-3] DEBUG -[ArticleController.java:77]- 2022-03-02
2022-03-02 10:00:58,945 [http-nio-8082-exec-3] DEBUG -[BaseJdbcLogger.java:137]- ==>  Preparing: select article.id, title, editDate, publishDate, uid, state , content ,user.username as author from article,user where DATE_FORMAT(publishDate,'%Y-%m-%d') BETWEEN ? AND ? and user.id=article.uid
2022-03-02 10:00:58,947 [http-nio-8082-exec-3] DEBUG -[BaseJdbcLogger.java:137]- ==> Parameters: 2022-02-28(String), 2022-03-06(String)
2022-03-02 10:00:59,021 [http-nio-8082-exec-3] TRACE -[BaseJdbcLogger.java:143]- <==    Columns: id, title, editDate, publishDate, uid, state, content, author
2022-03-02 10:00:59,024 [http-nio-8082-exec-3] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 1, 第一周周报, null, 2022-03-01 19:30:19, 1, null, <<BLOB>>, admin
2022-03-02 10:00:59,025 [http-nio-8082-exec-3] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 58, 第二周, null, 2022-03-01 19:30:33, 1, null, <<BLOB>>, admin
2022-03-02 10:00:59,026 [http-nio-8082-exec-3] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 59, grgewgf, null, 2022-03-01 21:38:33, 1, null, <<BLOB>>, admin
2022-03-02 10:00:59,027 [http-nio-8082-exec-3] DEBUG -[BaseJdbcLogger.java:137]- <==      Total: 3
2022-03-02 10:02:15,169 [http-nio-8082-exec-7] DEBUG -[BaseJdbcLogger.java:137]- ==>  Preparing: SELECT u.`id` AS uid,u.username,u.`enabled`,u.`email`,u.`regTime`,u.`avatar_name` AS avatarName,r.`id` AS rid,r.`name` AS englishName,r.`nameZh` AS chineseName FROM `user` AS u, role AS r, user_role AS ur WHERE u.`id`=ur.`user_id` AND r.`id`=ur.`role_id`
2022-03-02 10:02:15,172 [http-nio-8082-exec-7] DEBUG -[BaseJdbcLogger.java:137]- ==> Parameters: 
2022-03-02 10:02:15,237 [http-nio-8082-exec-7] TRACE -[BaseJdbcLogger.java:143]- <==    Columns: uid, username, enabled, email, regTime, avatarName, rid, englishName, chineseName
2022-03-02 10:02:15,239 [http-nio-8082-exec-7] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 6, yuehongli, 1, null, 2022-02-04 15:38:52, null, 1, admin, 管理员
2022-03-02 10:02:15,244 [http-nio-8082-exec-7] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 1, admin, 1, null, null, 2022-02-26b0127966d90d4ace9f4253ab69563fd0.png, 1, admin, 管理员
2022-03-02 10:02:15,246 [http-nio-8082-exec-7] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 1, admin, 1, null, null, 2022-02-26b0127966d90d4ace9f4253ab69563fd0.png, 2, user, 普通用户
2022-03-02 10:02:15,247 [http-nio-8082-exec-7] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 10, 胡玉, 1, 1111111@qq.com, 2022-02-11 21:12:06, null, 1, admin, 管理员
2022-03-02 10:02:15,249 [http-nio-8082-exec-7] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 10, 胡玉, 1, 1111111@qq.com, 2022-02-11 21:12:06, null, 2, user, 普通用户
2022-03-02 10:02:15,251 [http-nio-8082-exec-7] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 12, asmin, 1, string4774, 2022-02-23 22:27:05, null, 2, user, 普通用户
2022-03-02 10:02:15,254 [http-nio-8082-exec-7] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 5, hyw, 1, null, 2022-01-30 18:18:06, 2022-02-132d0e213d5c354b579f66f31b37cfe920.png, 2, user, 普通用户
2022-03-02 10:02:15,256 [http-nio-8082-exec-7] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 13, fsfsfsfs, 1, yhli394@163.com, 2022-03-01 21:23:16, null, 2, user, 普通用户
2022-03-02 10:02:15,258 [http-nio-8082-exec-7] DEBUG -[BaseJdbcLogger.java:137]- <==      Total: 8
2022-03-02 10:02:35,721 [http-nio-8082-exec-10] DEBUG -[ArticleController.java:77]- 2022-03-02
2022-03-02 10:02:35,722 [http-nio-8082-exec-10] DEBUG -[BaseJdbcLogger.java:137]- ==>  Preparing: select article.id, title, editDate, publishDate, uid, state , content ,user.username as author from article,user where DATE_FORMAT(publishDate,'%Y-%m-%d') BETWEEN ? AND ? and user.id=article.uid
2022-03-02 10:02:35,724 [http-nio-8082-exec-10] DEBUG -[BaseJdbcLogger.java:137]- ==> Parameters: 2022-02-28(String), 2022-03-06(String)
2022-03-02 10:02:35,797 [http-nio-8082-exec-10] TRACE -[BaseJdbcLogger.java:143]- <==    Columns: id, title, editDate, publishDate, uid, state, content, author
2022-03-02 10:02:35,799 [http-nio-8082-exec-10] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 1, 第一周周报, null, 2022-03-01 19:30:19, 1, null, <<BLOB>>, admin
2022-03-02 10:02:35,801 [http-nio-8082-exec-10] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 58, 第二周, null, 2022-03-01 19:30:33, 1, null, <<BLOB>>, admin
2022-03-02 10:02:35,804 [http-nio-8082-exec-10] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 59, grgewgf, null, 2022-03-01 21:38:33, 1, null, <<BLOB>>, admin
2022-03-02 10:02:35,805 [http-nio-8082-exec-10] DEBUG -[BaseJdbcLogger.java:137]- <==      Total: 3
2022-03-02 10:14:11,356 [http-nio-8082-exec-3] DEBUG -[BaseJdbcLogger.java:137]- ==>  Preparing: select id, username, password, enabled, email, regTime, avatar_name from user where username=?
2022-03-02 10:14:11,358 [http-nio-8082-exec-3] DEBUG -[BaseJdbcLogger.java:137]- ==> Parameters: admin(String)
2022-03-02 10:14:11,443 [http-nio-8082-exec-3] TRACE -[BaseJdbcLogger.java:143]- <==    Columns: id, username, password, enabled, email, regTime, avatar_name
2022-03-02 10:14:11,443 [http-nio-8082-exec-3] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 1, admin, $2a$16$Fnenz3KKbv8Mh7N6CB2c5uTK8a4JC3wUe/sDV7z8n1Uq1vJdaUZYS, 1, null, null, 2022-02-26b0127966d90d4ace9f4253ab69563fd0.png
2022-03-02 10:14:11,444 [http-nio-8082-exec-3] DEBUG -[BaseJdbcLogger.java:137]- <==      Total: 1
2022-03-02 10:14:11,445 [http-nio-8082-exec-3] DEBUG -[BaseJdbcLogger.java:137]- ==>  Preparing: SELECT r.* FROM role AS r,user_role AS ur WHERE r.id = ur.`role_id` AND ur.`user_id`=?;
2022-03-02 10:14:11,445 [http-nio-8082-exec-3] DEBUG -[BaseJdbcLogger.java:137]- ==> Parameters: 1(Integer)
2022-03-02 10:14:11,537 [http-nio-8082-exec-3] TRACE -[BaseJdbcLogger.java:143]- <==    Columns: id, nameZh, name
2022-03-02 10:14:11,538 [http-nio-8082-exec-3] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 1, 管理员, admin
2022-03-02 10:14:11,539 [http-nio-8082-exec-3] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 2, 普通用户, user
2022-03-02 10:14:11,540 [http-nio-8082-exec-3] DEBUG -[BaseJdbcLogger.java:137]- <==      Total: 2
2022-03-02 10:14:19,580 [http-nio-8082-exec-6] DEBUG -[ArticleController.java:77]- 2022-03-02
2022-03-02 10:14:19,581 [http-nio-8082-exec-6] DEBUG -[BaseJdbcLogger.java:137]- ==>  Preparing: select article.id, title, editDate, publishDate, uid, state , content ,user.username as author from article,user where DATE_FORMAT(publishDate,'%Y-%m-%d') BETWEEN ? AND ? and user.id=article.uid
2022-03-02 10:14:19,583 [http-nio-8082-exec-6] DEBUG -[BaseJdbcLogger.java:137]- ==> Parameters: 2022-02-28(String), 2022-03-06(String)
2022-03-02 10:14:19,658 [http-nio-8082-exec-6] TRACE -[BaseJdbcLogger.java:143]- <==    Columns: id, title, editDate, publishDate, uid, state, content, author
2022-03-02 10:14:19,659 [http-nio-8082-exec-6] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 1, 第一周周报, null, 2022-03-01 19:30:19, 1, null, <<BLOB>>, admin
2022-03-02 10:14:19,661 [http-nio-8082-exec-6] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 58, 第二周, null, 2022-03-01 19:30:33, 1, null, <<BLOB>>, admin
2022-03-02 10:14:19,664 [http-nio-8082-exec-6] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 59, grgewgf, null, 2022-03-01 21:38:33, 1, null, <<BLOB>>, admin
2022-03-02 10:14:19,666 [http-nio-8082-exec-6] DEBUG -[BaseJdbcLogger.java:137]- <==      Total: 3
2022-03-02 10:14:44,226 [http-nio-8082-exec-9] DEBUG -[BaseJdbcLogger.java:137]- ==>  Preparing: select id, username, password, enabled, email, regTime, avatar_name from user where username=?
2022-03-02 10:14:44,227 [http-nio-8082-exec-9] DEBUG -[BaseJdbcLogger.java:137]- ==> Parameters: admin(String)
2022-03-02 10:14:44,295 [http-nio-8082-exec-9] TRACE -[BaseJdbcLogger.java:143]- <==    Columns: id, username, password, enabled, email, regTime, avatar_name
2022-03-02 10:14:44,296 [http-nio-8082-exec-9] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 1, admin, $2a$16$Fnenz3KKbv8Mh7N6CB2c5uTK8a4JC3wUe/sDV7z8n1Uq1vJdaUZYS, 1, null, null, 2022-02-26b0127966d90d4ace9f4253ab69563fd0.png
2022-03-02 10:14:44,297 [http-nio-8082-exec-9] DEBUG -[BaseJdbcLogger.java:137]- <==      Total: 1
2022-03-02 10:14:44,298 [http-nio-8082-exec-9] DEBUG -[BaseJdbcLogger.java:137]- ==>  Preparing: SELECT r.* FROM role AS r,user_role AS ur WHERE r.id = ur.`role_id` AND ur.`user_id`=?;
2022-03-02 10:14:44,299 [http-nio-8082-exec-9] DEBUG -[BaseJdbcLogger.java:137]- ==> Parameters: 1(Integer)
2022-03-02 10:14:44,365 [http-nio-8082-exec-9] TRACE -[BaseJdbcLogger.java:143]- <==    Columns: id, nameZh, name
2022-03-02 10:14:44,366 [http-nio-8082-exec-9] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 1, 管理员, admin
2022-03-02 10:14:44,366 [http-nio-8082-exec-9] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 2, 普通用户, user
2022-03-02 10:14:44,367 [http-nio-8082-exec-9] DEBUG -[BaseJdbcLogger.java:137]- <==      Total: 2
2022-03-02 10:14:52,193 [http-nio-8082-exec-2] DEBUG -[ArticleController.java:77]- 2022-03-02
2022-03-02 10:14:52,194 [http-nio-8082-exec-2] DEBUG -[BaseJdbcLogger.java:137]- ==>  Preparing: select article.id, title, editDate, publishDate, uid, state , content ,user.username as author from article,user where DATE_FORMAT(publishDate,'%Y-%m-%d') BETWEEN ? AND ? and user.id=article.uid
2022-03-02 10:14:52,195 [http-nio-8082-exec-2] DEBUG -[BaseJdbcLogger.java:137]- ==> Parameters: 2022-02-28(String), 2022-03-06(String)
2022-03-02 10:14:52,260 [http-nio-8082-exec-2] TRACE -[BaseJdbcLogger.java:143]- <==    Columns: id, title, editDate, publishDate, uid, state, content, author
2022-03-02 10:14:52,261 [http-nio-8082-exec-2] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 1, 第一周周报, null, 2022-03-01 19:30:19, 1, null, <<BLOB>>, admin
2022-03-02 10:14:52,262 [http-nio-8082-exec-2] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 58, 第二周, null, 2022-03-01 19:30:33, 1, null, <<BLOB>>, admin
2022-03-02 10:14:52,263 [http-nio-8082-exec-2] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 59, grgewgf, null, 2022-03-01 21:38:33, 1, null, <<BLOB>>, admin
2022-03-02 10:14:52,264 [http-nio-8082-exec-2] DEBUG -[BaseJdbcLogger.java:137]- <==      Total: 3
2022-03-02 10:18:48,601 [http-nio-8082-exec-5] DEBUG -[BaseJdbcLogger.java:137]- ==>  Preparing: select id, username, password, enabled, email, regTime, avatar_name from user where username=?
2022-03-02 10:18:48,602 [http-nio-8082-exec-5] DEBUG -[BaseJdbcLogger.java:137]- ==> Parameters: admin(String)
2022-03-02 10:18:48,667 [http-nio-8082-exec-5] TRACE -[BaseJdbcLogger.java:143]- <==    Columns: id, username, password, enabled, email, regTime, avatar_name
2022-03-02 10:18:48,668 [http-nio-8082-exec-5] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 1, admin, $2a$16$Fnenz3KKbv8Mh7N6CB2c5uTK8a4JC3wUe/sDV7z8n1Uq1vJdaUZYS, 1, null, null, 2022-02-26b0127966d90d4ace9f4253ab69563fd0.png
2022-03-02 10:18:48,669 [http-nio-8082-exec-5] DEBUG -[BaseJdbcLogger.java:137]- <==      Total: 1
2022-03-02 10:18:48,671 [http-nio-8082-exec-5] DEBUG -[BaseJdbcLogger.java:137]- ==>  Preparing: SELECT r.* FROM role AS r,user_role AS ur WHERE r.id = ur.`role_id` AND ur.`user_id`=?;
2022-03-02 10:18:48,672 [http-nio-8082-exec-5] DEBUG -[BaseJdbcLogger.java:137]- ==> Parameters: 1(Integer)
2022-03-02 10:18:48,739 [http-nio-8082-exec-5] TRACE -[BaseJdbcLogger.java:143]- <==    Columns: id, nameZh, name
2022-03-02 10:18:48,740 [http-nio-8082-exec-5] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 1, 管理员, admin
2022-03-02 10:18:48,741 [http-nio-8082-exec-5] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 2, 普通用户, user
2022-03-02 10:18:48,744 [http-nio-8082-exec-5] DEBUG -[BaseJdbcLogger.java:137]- <==      Total: 2
2022-03-02 10:18:57,110 [http-nio-8082-exec-8] DEBUG -[ArticleController.java:77]- 2022-03-02
2022-03-02 10:18:57,111 [http-nio-8082-exec-8] DEBUG -[BaseJdbcLogger.java:137]- ==>  Preparing: select article.id, title, editDate, publishDate, uid, state , content ,user.username as author from article,user where DATE_FORMAT(publishDate,'%Y-%m-%d') BETWEEN ? AND ? and user.id=article.uid
2022-03-02 10:18:57,112 [http-nio-8082-exec-8] DEBUG -[BaseJdbcLogger.java:137]- ==> Parameters: 2022-02-28(String), 2022-03-06(String)
2022-03-02 10:18:57,177 [http-nio-8082-exec-8] TRACE -[BaseJdbcLogger.java:143]- <==    Columns: id, title, editDate, publishDate, uid, state, content, author
2022-03-02 10:18:57,178 [http-nio-8082-exec-8] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 1, 第一周周报, null, 2022-03-01 19:30:19, 1, null, <<BLOB>>, admin
2022-03-02 10:18:57,179 [http-nio-8082-exec-8] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 58, 第二周, null, 2022-03-01 19:30:33, 1, null, <<BLOB>>, admin
2022-03-02 10:18:57,179 [http-nio-8082-exec-8] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 59, grgewgf, null, 2022-03-01 21:38:33, 1, null, <<BLOB>>, admin
2022-03-02 10:18:57,180 [http-nio-8082-exec-8] DEBUG -[BaseJdbcLogger.java:137]- <==      Total: 3
2022-03-02 10:32:39,951 [http-nio-8082-exec-1] DEBUG -[BaseJdbcLogger.java:137]- ==>  Preparing: select id, username, password, enabled, email, regTime, avatar_name from user where username=?
2022-03-02 10:32:39,952 [http-nio-8082-exec-1] DEBUG -[BaseJdbcLogger.java:137]- ==> Parameters: admin(String)
2022-03-02 10:32:40,032 [http-nio-8082-exec-1] TRACE -[BaseJdbcLogger.java:143]- <==    Columns: id, username, password, enabled, email, regTime, avatar_name
2022-03-02 10:32:40,032 [http-nio-8082-exec-1] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 1, admin, $2a$16$Fnenz3KKbv8Mh7N6CB2c5uTK8a4JC3wUe/sDV7z8n1Uq1vJdaUZYS, 1, null, null, 2022-02-26b0127966d90d4ace9f4253ab69563fd0.png
2022-03-02 10:32:40,033 [http-nio-8082-exec-1] DEBUG -[BaseJdbcLogger.java:137]- <==      Total: 1
2022-03-02 10:32:40,036 [http-nio-8082-exec-1] DEBUG -[BaseJdbcLogger.java:137]- ==>  Preparing: SELECT r.* FROM role AS r,user_role AS ur WHERE r.id = ur.`role_id` AND ur.`user_id`=?;
2022-03-02 10:32:40,038 [http-nio-8082-exec-1] DEBUG -[BaseJdbcLogger.java:137]- ==> Parameters: 1(Integer)
2022-03-02 10:32:40,121 [http-nio-8082-exec-1] TRACE -[BaseJdbcLogger.java:143]- <==    Columns: id, nameZh, name
2022-03-02 10:32:40,122 [http-nio-8082-exec-1] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 1, 管理员, admin
2022-03-02 10:32:40,123 [http-nio-8082-exec-1] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 2, 普通用户, user
2022-03-02 10:32:40,124 [http-nio-8082-exec-1] DEBUG -[BaseJdbcLogger.java:137]- <==      Total: 2
2022-03-02 10:32:47,561 [http-nio-8082-exec-3] DEBUG -[ArticleController.java:77]- 2022-03-02
2022-03-02 10:32:47,563 [http-nio-8082-exec-3] DEBUG -[BaseJdbcLogger.java:137]- ==>  Preparing: select article.id, title, editDate, publishDate, uid, state , content ,user.username as author from article,user where DATE_FORMAT(publishDate,'%Y-%m-%d') BETWEEN ? AND ? and user.id=article.uid
2022-03-02 10:32:47,565 [http-nio-8082-exec-3] DEBUG -[BaseJdbcLogger.java:137]- ==> Parameters: 2022-02-28(String), 2022-03-06(String)
2022-03-02 10:32:47,627 [http-nio-8082-exec-3] TRACE -[BaseJdbcLogger.java:143]- <==    Columns: id, title, editDate, publishDate, uid, state, content, author
2022-03-02 10:32:47,627 [http-nio-8082-exec-3] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 1, 第一周周报, null, 2022-03-01 19:30:19, 1, null, <<BLOB>>, admin
2022-03-02 10:32:47,630 [http-nio-8082-exec-3] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 58, 第二周, null, 2022-03-01 19:30:33, 1, null, <<BLOB>>, admin
2022-03-02 10:32:47,631 [http-nio-8082-exec-3] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 59, grgewgf, null, 2022-03-01 21:38:33, 1, null, <<BLOB>>, admin
2022-03-02 10:32:47,631 [http-nio-8082-exec-3] DEBUG -[BaseJdbcLogger.java:137]- <==      Total: 3
2022-03-02 10:32:55,354 [http-nio-8082-exec-8] DEBUG -[BaseJdbcLogger.java:137]- ==>  Preparing: SELECT u.`id` AS uid,u.username,u.`enabled`,u.`email`,u.`regTime`,u.`avatar_name` AS avatarName,r.`id` AS rid,r.`name` AS englishName,r.`nameZh` AS chineseName FROM `user` AS u, role AS r, user_role AS ur WHERE u.`id`=ur.`user_id` AND r.`id`=ur.`role_id`
2022-03-02 10:32:55,356 [http-nio-8082-exec-8] DEBUG -[BaseJdbcLogger.java:137]- ==> Parameters: 
2022-03-02 10:32:55,448 [http-nio-8082-exec-8] TRACE -[BaseJdbcLogger.java:143]- <==    Columns: uid, username, enabled, email, regTime, avatarName, rid, englishName, chineseName
2022-03-02 10:32:55,449 [http-nio-8082-exec-8] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 6, yuehongli, 1, null, 2022-02-04 15:38:52, null, 1, admin, 管理员
2022-03-02 10:32:55,450 [http-nio-8082-exec-8] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 1, admin, 1, null, null, 2022-02-26b0127966d90d4ace9f4253ab69563fd0.png, 1, admin, 管理员
2022-03-02 10:32:55,452 [http-nio-8082-exec-8] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 1, admin, 1, null, null, 2022-02-26b0127966d90d4ace9f4253ab69563fd0.png, 2, user, 普通用户
2022-03-02 10:32:55,453 [http-nio-8082-exec-8] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 10, 胡玉, 1, 1111111@qq.com, 2022-02-11 21:12:06, null, 1, admin, 管理员
2022-03-02 10:32:55,454 [http-nio-8082-exec-8] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 10, 胡玉, 1, 1111111@qq.com, 2022-02-11 21:12:06, null, 2, user, 普通用户
2022-03-02 10:32:55,456 [http-nio-8082-exec-8] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 12, asmin, 1, string4774, 2022-02-23 22:27:05, null, 2, user, 普通用户
2022-03-02 10:32:55,457 [http-nio-8082-exec-8] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 5, hyw, 1, null, 2022-01-30 18:18:06, 2022-02-132d0e213d5c354b579f66f31b37cfe920.png, 2, user, 普通用户
2022-03-02 10:32:55,460 [http-nio-8082-exec-8] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 13, fsfsfsfs, 1, yhli394@163.com, 2022-03-01 21:23:16, null, 2, user, 普通用户
2022-03-02 10:32:55,461 [http-nio-8082-exec-8] DEBUG -[BaseJdbcLogger.java:137]- <==      Total: 8
2022-03-02 10:33:00,463 [http-nio-8082-exec-10] DEBUG -[BaseJdbcLogger.java:137]- ==>  Preparing: select id, title, editDate, publishDate, uid, state , content from article where uid = ?
2022-03-02 10:33:00,464 [http-nio-8082-exec-10] DEBUG -[BaseJdbcLogger.java:137]- ==> Parameters: 1(Integer)
2022-03-02 10:33:00,542 [http-nio-8082-exec-10] TRACE -[BaseJdbcLogger.java:143]- <==    Columns: id, title, editDate, publishDate, uid, state, content
2022-03-02 10:33:00,543 [http-nio-8082-exec-10] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 1, 第一周周报, null, 2022-03-01 19:30:19, 1, null, <<BLOB>>
2022-03-02 10:33:00,545 [http-nio-8082-exec-10] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 54, 2-25, null, 2022-02-25 20:22:57, 1, null, <<BLOB>>
2022-03-02 10:33:00,547 [http-nio-8082-exec-10] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 55, 2-25, null, 2022-02-25 20:28:33, 1, null, <<BLOB>>
2022-03-02 10:33:00,548 [http-nio-8082-exec-10] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 56, 2-26, null, 2022-02-26 16:19:20, 1, null, <<BLOB>>
2022-03-02 10:33:00,550 [http-nio-8082-exec-10] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 57, gh, null, 2022-02-26 16:20:07, 1, null, <<BLOB>>
2022-03-02 10:33:00,551 [http-nio-8082-exec-10] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 58, 第二周, null, 2022-03-01 19:30:33, 1, null, <<BLOB>>
2022-03-02 10:33:00,553 [http-nio-8082-exec-10] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 59, grgewgf, null, 2022-03-01 21:38:33, 1, null, <<BLOB>>
2022-03-02 10:33:00,554 [http-nio-8082-exec-10] DEBUG -[BaseJdbcLogger.java:137]- <==      Total: 7
2022-03-02 10:33:13,825 [http-nio-8082-exec-4] DEBUG -[BaseJdbcLogger.java:137]- ==>  Preparing: SELECT u.`id` AS uid,u.username,u.`enabled`,u.`email`,u.`regTime`,u.`avatar_name` AS avatarName,r.`id` AS rid,r.`name` AS englishName,r.`nameZh` AS chineseName FROM `user` AS u, role AS r, user_role AS ur WHERE u.`id`=ur.`user_id` AND r.`id`=ur.`role_id`
2022-03-02 10:33:13,825 [http-nio-8082-exec-4] DEBUG -[BaseJdbcLogger.java:137]- ==> Parameters: 
2022-03-02 10:33:13,906 [http-nio-8082-exec-4] TRACE -[BaseJdbcLogger.java:143]- <==    Columns: uid, username, enabled, email, regTime, avatarName, rid, englishName, chineseName
2022-03-02 10:33:13,907 [http-nio-8082-exec-4] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 6, yuehongli, 1, null, 2022-02-04 15:38:52, null, 1, admin, 管理员
2022-03-02 10:33:13,909 [http-nio-8082-exec-4] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 1, admin, 1, null, null, 2022-02-26b0127966d90d4ace9f4253ab69563fd0.png, 1, admin, 管理员
2022-03-02 10:33:13,910 [http-nio-8082-exec-4] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 1, admin, 1, null, null, 2022-02-26b0127966d90d4ace9f4253ab69563fd0.png, 2, user, 普通用户
2022-03-02 10:33:13,911 [http-nio-8082-exec-4] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 10, 胡玉, 1, 1111111@qq.com, 2022-02-11 21:12:06, null, 1, admin, 管理员
2022-03-02 10:33:13,912 [http-nio-8082-exec-4] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 10, 胡玉, 1, 1111111@qq.com, 2022-02-11 21:12:06, null, 2, user, 普通用户
2022-03-02 10:33:13,913 [http-nio-8082-exec-4] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 12, asmin, 1, string4774, 2022-02-23 22:27:05, null, 2, user, 普通用户
2022-03-02 10:33:13,915 [http-nio-8082-exec-4] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 5, hyw, 1, null, 2022-01-30 18:18:06, 2022-02-132d0e213d5c354b579f66f31b37cfe920.png, 2, user, 普通用户
2022-03-02 10:33:13,917 [http-nio-8082-exec-4] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 13, fsfsfsfs, 1, yhli394@163.com, 2022-03-01 21:23:16, null, 2, user, 普通用户
2022-03-02 10:33:13,918 [http-nio-8082-exec-4] DEBUG -[BaseJdbcLogger.java:137]- <==      Total: 8
2022-03-02 10:33:24,651 [http-nio-8082-exec-6] DEBUG -[BaseJdbcLogger.java:137]- ==>  Preparing: select id, title, editDate, publishDate, uid, state , content from article where uid = ?
2022-03-02 10:33:24,652 [http-nio-8082-exec-6] DEBUG -[BaseJdbcLogger.java:137]- ==> Parameters: 1(Integer)
2022-03-02 10:33:24,731 [http-nio-8082-exec-6] TRACE -[BaseJdbcLogger.java:143]- <==    Columns: id, title, editDate, publishDate, uid, state, content
2022-03-02 10:33:24,732 [http-nio-8082-exec-6] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 1, 第一周周报, null, 2022-03-01 19:30:19, 1, null, <<BLOB>>
2022-03-02 10:33:24,733 [http-nio-8082-exec-6] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 54, 2-25, null, 2022-02-25 20:22:57, 1, null, <<BLOB>>
2022-03-02 10:33:24,733 [http-nio-8082-exec-6] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 55, 2-25, null, 2022-02-25 20:28:33, 1, null, <<BLOB>>
2022-03-02 10:33:24,734 [http-nio-8082-exec-6] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 56, 2-26, null, 2022-02-26 16:19:20, 1, null, <<BLOB>>
2022-03-02 10:33:24,735 [http-nio-8082-exec-6] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 57, gh, null, 2022-02-26 16:20:07, 1, null, <<BLOB>>
2022-03-02 10:33:24,736 [http-nio-8082-exec-6] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 58, 第二周, null, 2022-03-01 19:30:33, 1, null, <<BLOB>>
2022-03-02 10:33:24,736 [http-nio-8082-exec-6] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 59, grgewgf, null, 2022-03-01 21:38:33, 1, null, <<BLOB>>
2022-03-02 10:33:24,737 [http-nio-8082-exec-6] DEBUG -[BaseJdbcLogger.java:137]- <==      Total: 7
2022-03-02 10:33:25,581 [http-nio-8082-exec-8] DEBUG -[BaseJdbcLogger.java:137]- ==>  Preparing: select id, title, editDate, publishDate, uid, state , content from article where uid = ?
2022-03-02 10:33:25,582 [http-nio-8082-exec-8] DEBUG -[BaseJdbcLogger.java:137]- ==> Parameters: 1(Integer)
2022-03-02 10:33:25,639 [http-nio-8082-exec-8] TRACE -[BaseJdbcLogger.java:143]- <==    Columns: id, title, editDate, publishDate, uid, state, content
2022-03-02 10:33:25,640 [http-nio-8082-exec-8] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 1, 第一周周报, null, 2022-03-01 19:30:19, 1, null, <<BLOB>>
2022-03-02 10:33:25,641 [http-nio-8082-exec-8] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 54, 2-25, null, 2022-02-25 20:22:57, 1, null, <<BLOB>>
2022-03-02 10:33:25,642 [http-nio-8082-exec-8] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 55, 2-25, null, 2022-02-25 20:28:33, 1, null, <<BLOB>>
2022-03-02 10:33:25,642 [http-nio-8082-exec-8] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 56, 2-26, null, 2022-02-26 16:19:20, 1, null, <<BLOB>>
2022-03-02 10:33:25,643 [http-nio-8082-exec-8] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 57, gh, null, 2022-02-26 16:20:07, 1, null, <<BLOB>>
2022-03-02 10:33:25,645 [http-nio-8082-exec-8] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 58, 第二周, null, 2022-03-01 19:30:33, 1, null, <<BLOB>>
2022-03-02 10:33:25,646 [http-nio-8082-exec-8] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 59, grgewgf, null, 2022-03-01 21:38:33, 1, null, <<BLOB>>
2022-03-02 10:33:25,647 [http-nio-8082-exec-8] DEBUG -[BaseJdbcLogger.java:137]- <==      Total: 7
2022-03-02 10:33:37,341 [http-nio-8082-exec-1] DEBUG -[BaseJdbcLogger.java:137]- ==>  Preparing: select id, title, editDate, publishDate, uid, state , content from article where uid = ?
2022-03-02 10:33:37,343 [http-nio-8082-exec-1] DEBUG -[BaseJdbcLogger.java:137]- ==> Parameters: 1(Integer)
2022-03-02 10:33:37,419 [http-nio-8082-exec-1] TRACE -[BaseJdbcLogger.java:143]- <==    Columns: id, title, editDate, publishDate, uid, state, content
2022-03-02 10:33:37,420 [http-nio-8082-exec-1] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 1, 第一周周报, null, 2022-03-01 19:30:19, 1, null, <<BLOB>>
2022-03-02 10:33:37,422 [http-nio-8082-exec-1] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 54, 2-25, null, 2022-02-25 20:22:57, 1, null, <<BLOB>>
2022-03-02 10:33:37,423 [http-nio-8082-exec-1] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 55, 2-25, null, 2022-02-25 20:28:33, 1, null, <<BLOB>>
2022-03-02 10:33:37,424 [http-nio-8082-exec-1] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 56, 2-26, null, 2022-02-26 16:19:20, 1, null, <<BLOB>>
2022-03-02 10:33:37,425 [http-nio-8082-exec-1] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 57, gh, null, 2022-02-26 16:20:07, 1, null, <<BLOB>>
2022-03-02 10:33:37,427 [http-nio-8082-exec-1] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 58, 第二周, null, 2022-03-01 19:30:33, 1, null, <<BLOB>>
2022-03-02 10:33:37,428 [http-nio-8082-exec-1] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 59, grgewgf, null, 2022-03-01 21:38:33, 1, null, <<BLOB>>
2022-03-02 10:33:37,429 [http-nio-8082-exec-1] DEBUG -[BaseJdbcLogger.java:137]- <==      Total: 7
2022-03-02 10:33:38,191 [http-nio-8082-exec-2] DEBUG -[BaseJdbcLogger.java:137]- ==>  Preparing: select id, title, editDate, publishDate, uid, state , content from article where uid = ?
2022-03-02 10:33:38,192 [http-nio-8082-exec-2] DEBUG -[BaseJdbcLogger.java:137]- ==> Parameters: 1(Integer)
2022-03-02 10:33:38,261 [http-nio-8082-exec-2] TRACE -[BaseJdbcLogger.java:143]- <==    Columns: id, title, editDate, publishDate, uid, state, content
2022-03-02 10:33:38,262 [http-nio-8082-exec-2] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 1, 第一周周报, null, 2022-03-01 19:30:19, 1, null, <<BLOB>>
2022-03-02 10:33:38,264 [http-nio-8082-exec-2] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 54, 2-25, null, 2022-02-25 20:22:57, 1, null, <<BLOB>>
2022-03-02 10:33:38,265 [http-nio-8082-exec-2] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 55, 2-25, null, 2022-02-25 20:28:33, 1, null, <<BLOB>>
2022-03-02 10:33:38,267 [http-nio-8082-exec-2] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 56, 2-26, null, 2022-02-26 16:19:20, 1, null, <<BLOB>>
2022-03-02 10:33:38,269 [http-nio-8082-exec-2] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 57, gh, null, 2022-02-26 16:20:07, 1, null, <<BLOB>>
2022-03-02 10:33:38,271 [http-nio-8082-exec-2] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 58, 第二周, null, 2022-03-01 19:30:33, 1, null, <<BLOB>>
2022-03-02 10:33:38,272 [http-nio-8082-exec-2] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 59, grgewgf, null, 2022-03-01 21:38:33, 1, null, <<BLOB>>
2022-03-02 10:33:38,274 [http-nio-8082-exec-2] DEBUG -[BaseJdbcLogger.java:137]- <==      Total: 7
2022-03-02 10:34:16,808 [http-nio-8082-exec-8] DEBUG -[ArticleController.java:77]- 2022-03-02
2022-03-02 10:34:16,809 [http-nio-8082-exec-8] DEBUG -[BaseJdbcLogger.java:137]- ==>  Preparing: select article.id, title, editDate, publishDate, uid, state , content ,user.username as author from article,user where DATE_FORMAT(publishDate,'%Y-%m-%d') BETWEEN ? AND ? and user.id=article.uid
2022-03-02 10:34:16,810 [http-nio-8082-exec-8] DEBUG -[BaseJdbcLogger.java:137]- ==> Parameters: 2022-02-28(String), 2022-03-06(String)
2022-03-02 10:34:16,890 [http-nio-8082-exec-8] TRACE -[BaseJdbcLogger.java:143]- <==    Columns: id, title, editDate, publishDate, uid, state, content, author
2022-03-02 10:34:16,892 [http-nio-8082-exec-8] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 1, 第一周周报, null, 2022-03-01 19:30:19, 1, null, <<BLOB>>, admin
2022-03-02 10:34:16,893 [http-nio-8082-exec-8] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 58, 第二周, null, 2022-03-01 19:30:33, 1, null, <<BLOB>>, admin
2022-03-02 10:34:16,894 [http-nio-8082-exec-8] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 59, grgewgf, null, 2022-03-01 21:38:33, 1, null, <<BLOB>>, admin
2022-03-02 10:34:16,895 [http-nio-8082-exec-8] DEBUG -[BaseJdbcLogger.java:137]- <==      Total: 3
2022-03-02 10:40:54,528 [http-nio-8082-exec-10] DEBUG -[BaseJdbcLogger.java:137]- ==>  Preparing: select id, username, password, enabled, email, regTime, avatar_name from user where username=?
2022-03-02 10:40:54,530 [http-nio-8082-exec-10] DEBUG -[BaseJdbcLogger.java:137]- ==> Parameters: admin(String)
2022-03-02 10:40:54,615 [http-nio-8082-exec-10] TRACE -[BaseJdbcLogger.java:143]- <==    Columns: id, username, password, enabled, email, regTime, avatar_name
2022-03-02 10:40:54,616 [http-nio-8082-exec-10] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 1, admin, $2a$16$Fnenz3KKbv8Mh7N6CB2c5uTK8a4JC3wUe/sDV7z8n1Uq1vJdaUZYS, 1, null, null, 2022-02-26b0127966d90d4ace9f4253ab69563fd0.png
2022-03-02 10:40:54,617 [http-nio-8082-exec-10] DEBUG -[BaseJdbcLogger.java:137]- <==      Total: 1
2022-03-02 10:40:54,618 [http-nio-8082-exec-10] DEBUG -[BaseJdbcLogger.java:137]- ==>  Preparing: SELECT r.* FROM role AS r,user_role AS ur WHERE r.id = ur.`role_id` AND ur.`user_id`=?;
2022-03-02 10:40:54,619 [http-nio-8082-exec-10] DEBUG -[BaseJdbcLogger.java:137]- ==> Parameters: 1(Integer)
2022-03-02 10:40:54,698 [http-nio-8082-exec-10] TRACE -[BaseJdbcLogger.java:143]- <==    Columns: id, nameZh, name
2022-03-02 10:40:55,177 [http-nio-8082-exec-10] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 1, 管理员, admin
2022-03-02 10:40:55,178 [http-nio-8082-exec-10] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 2, 普通用户, user
2022-03-02 10:40:55,179 [http-nio-8082-exec-10] DEBUG -[BaseJdbcLogger.java:137]- <==      Total: 2
2022-03-02 10:41:06,943 [http-nio-8082-exec-2] DEBUG -[ArticleController.java:77]- 2022-03-02
2022-03-02 10:41:06,945 [http-nio-8082-exec-2] DEBUG -[BaseJdbcLogger.java:137]- ==>  Preparing: select article.id, title, editDate, publishDate, uid, state , content ,user.username as author from article,user where DATE_FORMAT(publishDate,'%Y-%m-%d') BETWEEN ? AND ? and user.id=article.uid
2022-03-02 10:41:06,946 [http-nio-8082-exec-2] DEBUG -[BaseJdbcLogger.java:137]- ==> Parameters: 2022-02-28(String), 2022-03-06(String)
2022-03-02 10:41:07,027 [http-nio-8082-exec-2] TRACE -[BaseJdbcLogger.java:143]- <==    Columns: id, title, editDate, publishDate, uid, state, content, author
2022-03-02 10:41:07,028 [http-nio-8082-exec-2] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 1, 第一周周报, null, 2022-03-01 19:30:19, 1, null, <<BLOB>>, admin
2022-03-02 10:41:07,030 [http-nio-8082-exec-2] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 58, 第二周, null, 2022-03-01 19:30:33, 1, null, <<BLOB>>, admin
2022-03-02 10:41:07,031 [http-nio-8082-exec-2] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 59, grgewgf, null, 2022-03-01 21:38:33, 1, null, <<BLOB>>, admin
2022-03-02 10:41:07,033 [http-nio-8082-exec-2] DEBUG -[BaseJdbcLogger.java:137]- <==      Total: 3
2022-03-02 10:46:49,856 [http-nio-8082-exec-5] DEBUG -[BaseJdbcLogger.java:137]- ==>  Preparing: select id, username, password, enabled, email, regTime, avatar_name from user where username=?
2022-03-02 10:46:49,857 [http-nio-8082-exec-5] DEBUG -[BaseJdbcLogger.java:137]- ==> Parameters: admin(String)
2022-03-02 10:46:49,937 [http-nio-8082-exec-5] TRACE -[BaseJdbcLogger.java:143]- <==    Columns: id, username, password, enabled, email, regTime, avatar_name
2022-03-02 10:46:49,937 [http-nio-8082-exec-5] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 1, admin, $2a$16$Fnenz3KKbv8Mh7N6CB2c5uTK8a4JC3wUe/sDV7z8n1Uq1vJdaUZYS, 1, null, null, 2022-02-26b0127966d90d4ace9f4253ab69563fd0.png
2022-03-02 10:46:49,938 [http-nio-8082-exec-5] DEBUG -[BaseJdbcLogger.java:137]- <==      Total: 1
2022-03-02 10:46:49,939 [http-nio-8082-exec-5] DEBUG -[BaseJdbcLogger.java:137]- ==>  Preparing: SELECT r.* FROM role AS r,user_role AS ur WHERE r.id = ur.`role_id` AND ur.`user_id`=?;
2022-03-02 10:46:49,940 [http-nio-8082-exec-5] DEBUG -[BaseJdbcLogger.java:137]- ==> Parameters: 1(Integer)
2022-03-02 10:46:50,006 [http-nio-8082-exec-5] TRACE -[BaseJdbcLogger.java:143]- <==    Columns: id, nameZh, name
2022-03-02 10:46:50,006 [http-nio-8082-exec-5] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 1, 管理员, admin
2022-03-02 10:46:50,007 [http-nio-8082-exec-5] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 2, 普通用户, user
2022-03-02 10:46:50,007 [http-nio-8082-exec-5] DEBUG -[BaseJdbcLogger.java:137]- <==      Total: 2
2022-03-02 10:46:58,223 [http-nio-8082-exec-7] DEBUG -[ArticleController.java:77]- 2022-03-02
2022-03-02 10:46:58,224 [http-nio-8082-exec-7] DEBUG -[BaseJdbcLogger.java:137]- ==>  Preparing: select article.id, title, editDate, publishDate, uid, state , content ,user.username as author from article,user where DATE_FORMAT(publishDate,'%Y-%m-%d') BETWEEN ? AND ? and user.id=article.uid
2022-03-02 10:46:58,226 [http-nio-8082-exec-7] DEBUG -[BaseJdbcLogger.java:137]- ==> Parameters: 2022-02-28(String), 2022-03-06(String)
2022-03-02 10:46:58,295 [http-nio-8082-exec-7] TRACE -[BaseJdbcLogger.java:143]- <==    Columns: id, title, editDate, publishDate, uid, state, content, author
2022-03-02 10:46:58,296 [http-nio-8082-exec-7] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 1, 第一周周报, null, 2022-03-01 19:30:19, 1, null, <<BLOB>>, admin
2022-03-02 10:46:58,297 [http-nio-8082-exec-7] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 58, 第二周, null, 2022-03-01 19:30:33, 1, null, <<BLOB>>, admin
2022-03-02 10:46:58,298 [http-nio-8082-exec-7] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 59, grgewgf, null, 2022-03-01 21:38:33, 1, null, <<BLOB>>, admin
2022-03-02 10:46:58,299 [http-nio-8082-exec-7] DEBUG -[BaseJdbcLogger.java:137]- <==      Total: 3
2022-03-02 10:53:13,709 [http-nio-8082-exec-3] DEBUG -[BaseJdbcLogger.java:137]- ==>  Preparing: select id, username, password, enabled, email, regTime, avatar_name from user where username=?
2022-03-02 10:53:13,710 [http-nio-8082-exec-3] DEBUG -[BaseJdbcLogger.java:137]- ==> Parameters: admin(String)
2022-03-02 10:53:13,789 [http-nio-8082-exec-3] TRACE -[BaseJdbcLogger.java:143]- <==    Columns: id, username, password, enabled, email, regTime, avatar_name
2022-03-02 10:53:13,790 [http-nio-8082-exec-3] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 1, admin, $2a$16$Fnenz3KKbv8Mh7N6CB2c5uTK8a4JC3wUe/sDV7z8n1Uq1vJdaUZYS, 1, null, null, 2022-02-26b0127966d90d4ace9f4253ab69563fd0.png
2022-03-02 10:53:13,790 [http-nio-8082-exec-3] DEBUG -[BaseJdbcLogger.java:137]- <==      Total: 1
2022-03-02 10:53:13,791 [http-nio-8082-exec-3] DEBUG -[BaseJdbcLogger.java:137]- ==>  Preparing: SELECT r.* FROM role AS r,user_role AS ur WHERE r.id = ur.`role_id` AND ur.`user_id`=?;
2022-03-02 10:53:13,791 [http-nio-8082-exec-3] DEBUG -[BaseJdbcLogger.java:137]- ==> Parameters: 1(Integer)
2022-03-02 10:53:13,855 [http-nio-8082-exec-3] TRACE -[BaseJdbcLogger.java:143]- <==    Columns: id, nameZh, name
2022-03-02 10:53:13,855 [http-nio-8082-exec-3] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 1, 管理员, admin
2022-03-02 10:53:13,856 [http-nio-8082-exec-3] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 2, 普通用户, user
2022-03-02 10:53:13,857 [http-nio-8082-exec-3] DEBUG -[BaseJdbcLogger.java:137]- <==      Total: 2
2022-03-02 10:53:45,781 [http-nio-8082-exec-6] DEBUG -[BaseJdbcLogger.java:137]- ==>  Preparing: select id, username, password, enabled, email, regTime, avatar_name from user where username=?
2022-03-02 10:53:45,782 [http-nio-8082-exec-6] DEBUG -[BaseJdbcLogger.java:137]- ==> Parameters: admin(String)
2022-03-02 10:53:45,848 [http-nio-8082-exec-6] TRACE -[BaseJdbcLogger.java:143]- <==    Columns: id, username, password, enabled, email, regTime, avatar_name
2022-03-02 10:53:45,848 [http-nio-8082-exec-6] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 1, admin, $2a$16$Fnenz3KKbv8Mh7N6CB2c5uTK8a4JC3wUe/sDV7z8n1Uq1vJdaUZYS, 1, null, null, 2022-02-26b0127966d90d4ace9f4253ab69563fd0.png
2022-03-02 10:53:45,849 [http-nio-8082-exec-6] DEBUG -[BaseJdbcLogger.java:137]- <==      Total: 1
2022-03-02 10:53:45,849 [http-nio-8082-exec-6] DEBUG -[BaseJdbcLogger.java:137]- ==>  Preparing: SELECT r.* FROM role AS r,user_role AS ur WHERE r.id = ur.`role_id` AND ur.`user_id`=?;
2022-03-02 10:53:45,850 [http-nio-8082-exec-6] DEBUG -[BaseJdbcLogger.java:137]- ==> Parameters: 1(Integer)
2022-03-02 10:53:45,910 [http-nio-8082-exec-6] TRACE -[BaseJdbcLogger.java:143]- <==    Columns: id, nameZh, name
2022-03-02 10:53:45,911 [http-nio-8082-exec-6] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 1, 管理员, admin
2022-03-02 10:53:45,911 [http-nio-8082-exec-6] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 2, 普通用户, user
2022-03-02 10:53:45,911 [http-nio-8082-exec-6] DEBUG -[BaseJdbcLogger.java:137]- <==      Total: 2
2022-03-02 10:53:54,817 [http-nio-8082-exec-8] DEBUG -[ArticleController.java:77]- 2022-03-02
2022-03-02 10:53:54,818 [http-nio-8082-exec-8] DEBUG -[BaseJdbcLogger.java:137]- ==>  Preparing: select article.id, title, editDate, publishDate, uid, state , content ,user.username as author from article,user where DATE_FORMAT(publishDate,'%Y-%m-%d') BETWEEN ? AND ? and user.id=article.uid
2022-03-02 10:53:54,819 [http-nio-8082-exec-8] DEBUG -[BaseJdbcLogger.java:137]- ==> Parameters: 2022-02-28(String), 2022-03-06(String)
2022-03-02 10:53:54,903 [http-nio-8082-exec-8] TRACE -[BaseJdbcLogger.java:143]- <==    Columns: id, title, editDate, publishDate, uid, state, content, author
2022-03-02 10:53:54,904 [http-nio-8082-exec-8] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 1, 第一周周报, null, 2022-03-01 19:30:19, 1, null, <<BLOB>>, admin
2022-03-02 10:53:54,905 [http-nio-8082-exec-8] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 58, 第二周, null, 2022-03-01 19:30:33, 1, null, <<BLOB>>, admin
2022-03-02 10:53:54,906 [http-nio-8082-exec-8] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 59, grgewgf, null, 2022-03-01 21:38:33, 1, null, <<BLOB>>, admin
2022-03-02 10:53:54,907 [http-nio-8082-exec-8] DEBUG -[BaseJdbcLogger.java:137]- <==      Total: 3
2022-03-02 10:56:23,217 [http-nio-8082-exec-10] DEBUG -[BaseJdbcLogger.java:137]- ==>  Preparing: select id, username, password, enabled, email, regTime, avatar_name from user where username=?
2022-03-02 10:56:23,218 [http-nio-8082-exec-10] DEBUG -[BaseJdbcLogger.java:137]- ==> Parameters: admin(String)
2022-03-02 10:56:23,299 [http-nio-8082-exec-10] TRACE -[BaseJdbcLogger.java:143]- <==    Columns: id, username, password, enabled, email, regTime, avatar_name
2022-03-02 10:56:23,300 [http-nio-8082-exec-10] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 1, admin, $2a$16$Fnenz3KKbv8Mh7N6CB2c5uTK8a4JC3wUe/sDV7z8n1Uq1vJdaUZYS, 1, null, null, 2022-02-26b0127966d90d4ace9f4253ab69563fd0.png
2022-03-02 10:56:23,302 [http-nio-8082-exec-10] DEBUG -[BaseJdbcLogger.java:137]- <==      Total: 1
2022-03-02 10:56:23,304 [http-nio-8082-exec-10] DEBUG -[BaseJdbcLogger.java:137]- ==>  Preparing: SELECT r.* FROM role AS r,user_role AS ur WHERE r.id = ur.`role_id` AND ur.`user_id`=?;
2022-03-02 10:56:23,305 [http-nio-8082-exec-10] DEBUG -[BaseJdbcLogger.java:137]- ==> Parameters: 1(Integer)
2022-03-02 10:56:23,378 [http-nio-8082-exec-10] TRACE -[BaseJdbcLogger.java:143]- <==    Columns: id, nameZh, name
2022-03-02 10:56:23,378 [http-nio-8082-exec-10] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 1, 管理员, admin
2022-03-02 10:56:23,379 [http-nio-8082-exec-10] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 2, 普通用户, user
2022-03-02 10:56:23,379 [http-nio-8082-exec-10] DEBUG -[BaseJdbcLogger.java:137]- <==      Total: 2
2022-03-02 10:56:31,399 [http-nio-8082-exec-3] DEBUG -[ArticleController.java:77]- 2022-03-02
2022-03-02 10:56:31,401 [http-nio-8082-exec-3] DEBUG -[BaseJdbcLogger.java:137]- ==>  Preparing: select article.id, title, editDate, publishDate, uid, state , content ,user.username as author from article,user where DATE_FORMAT(publishDate,'%Y-%m-%d') BETWEEN ? AND ? and user.id=article.uid
2022-03-02 10:56:31,403 [http-nio-8082-exec-3] DEBUG -[BaseJdbcLogger.java:137]- ==> Parameters: 2022-02-28(String), 2022-03-06(String)
2022-03-02 10:56:31,468 [http-nio-8082-exec-3] TRACE -[BaseJdbcLogger.java:143]- <==    Columns: id, title, editDate, publishDate, uid, state, content, author
2022-03-02 10:56:31,469 [http-nio-8082-exec-3] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 1, 第一周周报, null, 2022-03-01 19:30:19, 1, null, <<BLOB>>, admin
2022-03-02 10:56:31,470 [http-nio-8082-exec-3] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 58, 第二周, null, 2022-03-01 19:30:33, 1, null, <<BLOB>>, admin
2022-03-02 10:56:31,470 [http-nio-8082-exec-3] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 59, grgewgf, null, 2022-03-01 21:38:33, 1, null, <<BLOB>>, admin
2022-03-02 10:56:31,471 [http-nio-8082-exec-3] DEBUG -[BaseJdbcLogger.java:137]- <==      Total: 3
2022-03-02 10:58:58,292 [http-nio-8082-exec-5] DEBUG -[BaseJdbcLogger.java:137]- ==>  Preparing: select id, username, password, enabled, email, regTime, avatar_name from user where username=?
2022-03-02 10:58:58,293 [http-nio-8082-exec-5] DEBUG -[BaseJdbcLogger.java:137]- ==> Parameters: admin(String)
2022-03-02 10:58:58,356 [http-nio-8082-exec-5] TRACE -[BaseJdbcLogger.java:143]- <==    Columns: id, username, password, enabled, email, regTime, avatar_name
2022-03-02 10:58:58,357 [http-nio-8082-exec-5] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 1, admin, $2a$16$Fnenz3KKbv8Mh7N6CB2c5uTK8a4JC3wUe/sDV7z8n1Uq1vJdaUZYS, 1, null, null, 2022-02-26b0127966d90d4ace9f4253ab69563fd0.png
2022-03-02 10:58:58,358 [http-nio-8082-exec-5] DEBUG -[BaseJdbcLogger.java:137]- <==      Total: 1
2022-03-02 10:58:58,359 [http-nio-8082-exec-5] DEBUG -[BaseJdbcLogger.java:137]- ==>  Preparing: SELECT r.* FROM role AS r,user_role AS ur WHERE r.id = ur.`role_id` AND ur.`user_id`=?;
2022-03-02 10:58:58,361 [http-nio-8082-exec-5] DEBUG -[BaseJdbcLogger.java:137]- ==> Parameters: 1(Integer)
2022-03-02 10:58:58,425 [http-nio-8082-exec-5] TRACE -[BaseJdbcLogger.java:143]- <==    Columns: id, nameZh, name
2022-03-02 10:58:58,426 [http-nio-8082-exec-5] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 1, 管理员, admin
2022-03-02 10:58:58,427 [http-nio-8082-exec-5] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 2, 普通用户, user
2022-03-02 10:58:58,428 [http-nio-8082-exec-5] DEBUG -[BaseJdbcLogger.java:137]- <==      Total: 2
2022-03-02 10:59:06,545 [http-nio-8082-exec-7] DEBUG -[ArticleController.java:77]- 2022-03-02
2022-03-02 10:59:06,545 [http-nio-8082-exec-7] DEBUG -[BaseJdbcLogger.java:137]- ==>  Preparing: select article.id, title, editDate, publishDate, uid, state , content ,user.username as author from article,user where DATE_FORMAT(publishDate,'%Y-%m-%d') BETWEEN ? AND ? and user.id=article.uid
2022-03-02 10:59:06,546 [http-nio-8082-exec-7] DEBUG -[BaseJdbcLogger.java:137]- ==> Parameters: 2022-02-28(String), 2022-03-06(String)
2022-03-02 10:59:06,639 [http-nio-8082-exec-7] TRACE -[BaseJdbcLogger.java:143]- <==    Columns: id, title, editDate, publishDate, uid, state, content, author
2022-03-02 10:59:06,640 [http-nio-8082-exec-7] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 1, 第一周周报, null, 2022-03-01 19:30:19, 1, null, <<BLOB>>, admin
2022-03-02 10:59:06,641 [http-nio-8082-exec-7] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 58, 第二周, null, 2022-03-01 19:30:33, 1, null, <<BLOB>>, admin
2022-03-02 10:59:06,641 [http-nio-8082-exec-7] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 59, grgewgf, null, 2022-03-01 21:38:33, 1, null, <<BLOB>>, admin
2022-03-02 10:59:06,641 [http-nio-8082-exec-7] DEBUG -[BaseJdbcLogger.java:137]- <==      Total: 3
2022-03-02 10:59:10,751 [http-nio-8082-exec-1] DEBUG -[CustomGlobalExceptionHandler.java:35]- java.io.IOException: 你的主机中的软件中止了一个已建立的连接。
org.apache.catalina.connector.ClientAbortException: java.io.IOException: 你的主机中的软件中止了一个已建立的连接。
	at org.apache.catalina.connector.OutputBuffer.realWriteBytes(OutputBuffer.java:353)
	at org.apache.catalina.connector.OutputBuffer.appendByteArray(OutputBuffer.java:753)
	at org.apache.catalina.connector.OutputBuffer.append(OutputBuffer.java:682)
	at org.apache.catalina.connector.OutputBuffer.writeBytes(OutputBuffer.java:388)
	at org.apache.catalina.connector.OutputBuffer.write(OutputBuffer.java:366)
	at org.apache.catalina.connector.CoyoteOutputStream.write(CoyoteOutputStream.java:96)
	at org.apache.catalina.connector.CoyoteOutputStream.write(CoyoteOutputStream.java:89)
	at org.springframework.session.web.http.OnCommittedResponseWrapper$SaveContextServletOutputStream.write(OnCommittedResponseWrapper.java:618)
	at org.springframework.security.web.util.OnCommittedResponseWrapper$SaveContextServletOutputStream.write(OnCommittedResponseWrapper.java:632)
	at org.springframework.security.web.util.OnCommittedResponseWrapper$SaveContextServletOutputStream.write(OnCommittedResponseWrapper.java:632)
	at org.springframework.util.StreamUtils.copy(StreamUtils.java:129)
	at org.springframework.http.converter.ByteArrayHttpMessageConverter.writeInternal(ByteArrayHttpMessageConverter.java:70)
	at org.springframework.http.converter.ByteArrayHttpMessageConverter.writeInternal(ByteArrayHttpMessageConverter.java:39)
	at org.springframework.http.converter.AbstractHttpMessageConverter.write(AbstractHttpMessageConverter.java:227)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:293)
	at org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor.handleReturnValue(HttpEntityMethodProcessor.java:219)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:228)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:83)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:218)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:142)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:82)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1723)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.io.IOException: 你的主机中的软件中止了一个已建立的连接。
	at sun.nio.ch.SocketDispatcher.write0(Native Method)
	at sun.nio.ch.SocketDispatcher.write(SocketDispatcher.java:51)
	at sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:93)
	at sun.nio.ch.IOUtil.write(IOUtil.java:65)
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:469)
	at org.apache.tomcat.util.net.NioChannel.write(NioChannel.java:135)
	at org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.doWrite(NioEndpoint.java:1364)
	at org.apache.tomcat.util.net.SocketWrapperBase.doWrite(SocketWrapperBase.java:766)
	at org.apache.tomcat.util.net.SocketWrapperBase.writeBlocking(SocketWrapperBase.java:586)
	at org.apache.tomcat.util.net.SocketWrapperBase.write(SocketWrapperBase.java:530)
	at org.apache.coyote.http11.Http11OutputBuffer$SocketOutputBuffer.doWrite(Http11OutputBuffer.java:547)
	at org.apache.coyote.http11.filters.IdentityOutputFilter.doWrite(IdentityOutputFilter.java:73)
	at org.apache.coyote.http11.Http11OutputBuffer.doWrite(Http11OutputBuffer.java:194)
	at org.apache.coyote.Response.doWrite(Response.java:615)
	at org.apache.catalina.connector.OutputBuffer.realWriteBytes(OutputBuffer.java:340)
	... 112 common frames omitted
2022-03-02 10:59:10,755 [http-nio-8082-exec-1] WARN  -[ExceptionHandlerExceptionResolver.java:434]- Failure in @ExceptionHandler com.liyuehong.weeklyreport.configuration.CustomGlobalExceptionHandler#handleAppException(Exception, HttpServletRequest)
java.lang.ClassCastException: org.apache.catalina.connector.ClientAbortException cannot be cast to com.liyuehong.weeklyreport.configuration.CustomException
	at com.liyuehong.weeklyreport.configuration.CustomGlobalExceptionHandler.handleAppException(CustomGlobalExceptionHandler.java:37)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:428)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:75)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:141)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1324)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1135)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:228)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:83)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:218)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:142)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:82)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1723)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2022-03-02 10:59:16,574 [http-nio-8082-exec-2] DEBUG -[BaseJdbcLogger.java:137]- ==>  Preparing: select id, username, password, enabled, email, regTime, avatar_name from user where username=?
2022-03-02 10:59:16,576 [http-nio-8082-exec-2] DEBUG -[BaseJdbcLogger.java:137]- ==> Parameters: admin(String)
2022-03-02 10:59:16,652 [http-nio-8082-exec-2] TRACE -[BaseJdbcLogger.java:143]- <==    Columns: id, username, password, enabled, email, regTime, avatar_name
2022-03-02 10:59:16,653 [http-nio-8082-exec-2] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 1, admin, $2a$16$Fnenz3KKbv8Mh7N6CB2c5uTK8a4JC3wUe/sDV7z8n1Uq1vJdaUZYS, 1, null, null, 2022-02-26b0127966d90d4ace9f4253ab69563fd0.png
2022-03-02 10:59:16,653 [http-nio-8082-exec-2] DEBUG -[BaseJdbcLogger.java:137]- <==      Total: 1
2022-03-02 10:59:16,654 [http-nio-8082-exec-2] DEBUG -[BaseJdbcLogger.java:137]- ==>  Preparing: SELECT r.* FROM role AS r,user_role AS ur WHERE r.id = ur.`role_id` AND ur.`user_id`=?;
2022-03-02 10:59:16,655 [http-nio-8082-exec-2] DEBUG -[BaseJdbcLogger.java:137]- ==> Parameters: 1(Integer)
2022-03-02 10:59:16,728 [http-nio-8082-exec-2] TRACE -[BaseJdbcLogger.java:143]- <==    Columns: id, nameZh, name
2022-03-02 10:59:16,729 [http-nio-8082-exec-2] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 1, 管理员, admin
2022-03-02 10:59:16,729 [http-nio-8082-exec-2] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 2, 普通用户, user
2022-03-02 10:59:16,730 [http-nio-8082-exec-2] DEBUG -[BaseJdbcLogger.java:137]- <==      Total: 2
2022-03-02 10:59:25,183 [http-nio-8082-exec-4] DEBUG -[ArticleController.java:77]- 2022-03-02
2022-03-02 10:59:25,183 [http-nio-8082-exec-4] DEBUG -[BaseJdbcLogger.java:137]- ==>  Preparing: select article.id, title, editDate, publishDate, uid, state , content ,user.username as author from article,user where DATE_FORMAT(publishDate,'%Y-%m-%d') BETWEEN ? AND ? and user.id=article.uid
2022-03-02 10:59:25,184 [http-nio-8082-exec-4] DEBUG -[BaseJdbcLogger.java:137]- ==> Parameters: 2022-02-28(String), 2022-03-06(String)
2022-03-02 10:59:25,245 [http-nio-8082-exec-4] TRACE -[BaseJdbcLogger.java:143]- <==    Columns: id, title, editDate, publishDate, uid, state, content, author
2022-03-02 10:59:25,246 [http-nio-8082-exec-4] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 1, 第一周周报, null, 2022-03-01 19:30:19, 1, null, <<BLOB>>, admin
2022-03-02 10:59:25,246 [http-nio-8082-exec-4] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 58, 第二周, null, 2022-03-01 19:30:33, 1, null, <<BLOB>>, admin
2022-03-02 10:59:25,247 [http-nio-8082-exec-4] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 59, grgewgf, null, 2022-03-01 21:38:33, 1, null, <<BLOB>>, admin
2022-03-02 10:59:25,247 [http-nio-8082-exec-4] DEBUG -[BaseJdbcLogger.java:137]- <==      Total: 3
2022-03-02 10:59:29,352 [http-nio-8082-exec-8] DEBUG -[CustomGlobalExceptionHandler.java:35]- java.io.IOException: 你的主机中的软件中止了一个已建立的连接。
org.apache.catalina.connector.ClientAbortException: java.io.IOException: 你的主机中的软件中止了一个已建立的连接。
	at org.apache.catalina.connector.OutputBuffer.realWriteBytes(OutputBuffer.java:353)
	at org.apache.catalina.connector.OutputBuffer.appendByteArray(OutputBuffer.java:753)
	at org.apache.catalina.connector.OutputBuffer.append(OutputBuffer.java:682)
	at org.apache.catalina.connector.OutputBuffer.writeBytes(OutputBuffer.java:388)
	at org.apache.catalina.connector.OutputBuffer.write(OutputBuffer.java:366)
	at org.apache.catalina.connector.CoyoteOutputStream.write(CoyoteOutputStream.java:96)
	at org.apache.catalina.connector.CoyoteOutputStream.write(CoyoteOutputStream.java:89)
	at org.springframework.session.web.http.OnCommittedResponseWrapper$SaveContextServletOutputStream.write(OnCommittedResponseWrapper.java:618)
	at org.springframework.security.web.util.OnCommittedResponseWrapper$SaveContextServletOutputStream.write(OnCommittedResponseWrapper.java:632)
	at org.springframework.security.web.util.OnCommittedResponseWrapper$SaveContextServletOutputStream.write(OnCommittedResponseWrapper.java:632)
	at org.springframework.util.StreamUtils.copy(StreamUtils.java:129)
	at org.springframework.http.converter.ByteArrayHttpMessageConverter.writeInternal(ByteArrayHttpMessageConverter.java:70)
	at org.springframework.http.converter.ByteArrayHttpMessageConverter.writeInternal(ByteArrayHttpMessageConverter.java:39)
	at org.springframework.http.converter.AbstractHttpMessageConverter.write(AbstractHttpMessageConverter.java:227)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:293)
	at org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor.handleReturnValue(HttpEntityMethodProcessor.java:219)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:228)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:83)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:218)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:142)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:82)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1723)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.io.IOException: 你的主机中的软件中止了一个已建立的连接。
	at sun.nio.ch.SocketDispatcher.write0(Native Method)
	at sun.nio.ch.SocketDispatcher.write(SocketDispatcher.java:51)
	at sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:93)
	at sun.nio.ch.IOUtil.write(IOUtil.java:65)
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:469)
	at org.apache.tomcat.util.net.NioChannel.write(NioChannel.java:135)
	at org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.doWrite(NioEndpoint.java:1364)
	at org.apache.tomcat.util.net.SocketWrapperBase.doWrite(SocketWrapperBase.java:766)
	at org.apache.tomcat.util.net.SocketWrapperBase.writeBlocking(SocketWrapperBase.java:586)
	at org.apache.tomcat.util.net.SocketWrapperBase.write(SocketWrapperBase.java:530)
	at org.apache.coyote.http11.Http11OutputBuffer$SocketOutputBuffer.doWrite(Http11OutputBuffer.java:547)
	at org.apache.coyote.http11.filters.IdentityOutputFilter.doWrite(IdentityOutputFilter.java:73)
	at org.apache.coyote.http11.Http11OutputBuffer.doWrite(Http11OutputBuffer.java:194)
	at org.apache.coyote.Response.doWrite(Response.java:615)
	at org.apache.catalina.connector.OutputBuffer.realWriteBytes(OutputBuffer.java:340)
	... 112 common frames omitted
2022-03-02 10:59:29,355 [http-nio-8082-exec-8] WARN  -[ExceptionHandlerExceptionResolver.java:434]- Failure in @ExceptionHandler com.liyuehong.weeklyreport.configuration.CustomGlobalExceptionHandler#handleAppException(Exception, HttpServletRequest)
java.lang.ClassCastException: org.apache.catalina.connector.ClientAbortException cannot be cast to com.liyuehong.weeklyreport.configuration.CustomException
	at com.liyuehong.weeklyreport.configuration.CustomGlobalExceptionHandler.handleAppException(CustomGlobalExceptionHandler.java:37)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:428)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:75)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:141)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1324)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1135)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:228)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:83)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:218)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:142)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:82)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1723)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2022-03-02 11:04:51,840 [http-nio-8082-exec-9] DEBUG -[BaseJdbcLogger.java:137]- ==>  Preparing: select id, username, password, enabled, email, regTime, avatar_name from user where username=?
2022-03-02 11:04:51,842 [http-nio-8082-exec-9] DEBUG -[BaseJdbcLogger.java:137]- ==> Parameters: admin(String)
2022-03-02 11:04:51,925 [http-nio-8082-exec-9] TRACE -[BaseJdbcLogger.java:143]- <==    Columns: id, username, password, enabled, email, regTime, avatar_name
2022-03-02 11:04:51,926 [http-nio-8082-exec-9] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 1, admin, $2a$16$Fnenz3KKbv8Mh7N6CB2c5uTK8a4JC3wUe/sDV7z8n1Uq1vJdaUZYS, 1, null, null, 2022-02-26b0127966d90d4ace9f4253ab69563fd0.png
2022-03-02 11:04:51,927 [http-nio-8082-exec-9] DEBUG -[BaseJdbcLogger.java:137]- <==      Total: 1
2022-03-02 11:04:51,929 [http-nio-8082-exec-9] DEBUG -[BaseJdbcLogger.java:137]- ==>  Preparing: SELECT r.* FROM role AS r,user_role AS ur WHERE r.id = ur.`role_id` AND ur.`user_id`=?;
2022-03-02 11:04:51,930 [http-nio-8082-exec-9] DEBUG -[BaseJdbcLogger.java:137]- ==> Parameters: 1(Integer)
2022-03-02 11:04:52,014 [http-nio-8082-exec-9] TRACE -[BaseJdbcLogger.java:143]- <==    Columns: id, nameZh, name
2022-03-02 11:04:52,015 [http-nio-8082-exec-9] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 1, 管理员, admin
2022-03-02 11:04:52,016 [http-nio-8082-exec-9] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 2, 普通用户, user
2022-03-02 11:04:52,016 [http-nio-8082-exec-9] DEBUG -[BaseJdbcLogger.java:137]- <==      Total: 2
2022-03-02 11:04:56,927 [http-nio-8082-exec-7] DEBUG -[BaseJdbcLogger.java:137]- ==>  Preparing: select id, username, password, enabled, email, regTime, avatar_name from user where username=?
2022-03-02 11:04:56,928 [http-nio-8082-exec-7] DEBUG -[BaseJdbcLogger.java:137]- ==> Parameters: admin(String)
2022-03-02 11:04:57,008 [http-nio-8082-exec-7] TRACE -[BaseJdbcLogger.java:143]- <==    Columns: id, username, password, enabled, email, regTime, avatar_name
2022-03-02 11:04:57,009 [http-nio-8082-exec-7] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 1, admin, $2a$16$Fnenz3KKbv8Mh7N6CB2c5uTK8a4JC3wUe/sDV7z8n1Uq1vJdaUZYS, 1, null, null, 2022-02-26b0127966d90d4ace9f4253ab69563fd0.png
2022-03-02 11:04:57,010 [http-nio-8082-exec-7] DEBUG -[BaseJdbcLogger.java:137]- <==      Total: 1
2022-03-02 11:04:57,011 [http-nio-8082-exec-7] DEBUG -[BaseJdbcLogger.java:137]- ==>  Preparing: SELECT r.* FROM role AS r,user_role AS ur WHERE r.id = ur.`role_id` AND ur.`user_id`=?;
2022-03-02 11:04:57,012 [http-nio-8082-exec-7] DEBUG -[BaseJdbcLogger.java:137]- ==> Parameters: 1(Integer)
2022-03-02 11:04:57,089 [http-nio-8082-exec-7] TRACE -[BaseJdbcLogger.java:143]- <==    Columns: id, nameZh, name
2022-03-02 11:04:57,090 [http-nio-8082-exec-7] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 1, 管理员, admin
2022-03-02 11:04:57,091 [http-nio-8082-exec-7] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 2, 普通用户, user
2022-03-02 11:04:57,091 [http-nio-8082-exec-7] DEBUG -[BaseJdbcLogger.java:137]- <==      Total: 2
2022-03-02 11:05:01,359 [http-nio-8082-exec-1] DEBUG -[ArticleController.java:77]- 2022-03-02
2022-03-02 11:05:01,361 [http-nio-8082-exec-1] DEBUG -[BaseJdbcLogger.java:137]- ==>  Preparing: select article.id, title, editDate, publishDate, uid, state , content ,user.username as author from article,user where DATE_FORMAT(publishDate,'%Y-%m-%d') BETWEEN ? AND ? and user.id=article.uid
2022-03-02 11:05:01,362 [http-nio-8082-exec-1] DEBUG -[BaseJdbcLogger.java:137]- ==> Parameters: 2022-02-28(String), 2022-03-06(String)
2022-03-02 11:05:01,437 [http-nio-8082-exec-1] TRACE -[BaseJdbcLogger.java:143]- <==    Columns: id, title, editDate, publishDate, uid, state, content, author
2022-03-02 11:05:01,437 [http-nio-8082-exec-1] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 1, 第一周周报, null, 2022-03-01 19:30:19, 1, null, <<BLOB>>, admin
2022-03-02 11:05:01,438 [http-nio-8082-exec-1] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 58, 第二周, null, 2022-03-01 19:30:33, 1, null, <<BLOB>>, admin
2022-03-02 11:05:01,438 [http-nio-8082-exec-1] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 59, grgewgf, null, 2022-03-01 21:38:33, 1, null, <<BLOB>>, admin
2022-03-02 11:05:01,438 [http-nio-8082-exec-1] DEBUG -[BaseJdbcLogger.java:137]- <==      Total: 3
2022-03-02 11:05:05,777 [http-nio-8082-exec-6] DEBUG -[CustomGlobalExceptionHandler.java:35]- java.io.IOException: 你的主机中的软件中止了一个已建立的连接。
org.apache.catalina.connector.ClientAbortException: java.io.IOException: 你的主机中的软件中止了一个已建立的连接。
	at org.apache.catalina.connector.OutputBuffer.realWriteBytes(OutputBuffer.java:353)
	at org.apache.catalina.connector.OutputBuffer.appendByteArray(OutputBuffer.java:753)
	at org.apache.catalina.connector.OutputBuffer.append(OutputBuffer.java:682)
	at org.apache.catalina.connector.OutputBuffer.writeBytes(OutputBuffer.java:388)
	at org.apache.catalina.connector.OutputBuffer.write(OutputBuffer.java:366)
	at org.apache.catalina.connector.CoyoteOutputStream.write(CoyoteOutputStream.java:96)
	at org.apache.catalina.connector.CoyoteOutputStream.write(CoyoteOutputStream.java:89)
	at org.springframework.session.web.http.OnCommittedResponseWrapper$SaveContextServletOutputStream.write(OnCommittedResponseWrapper.java:618)
	at org.springframework.security.web.util.OnCommittedResponseWrapper$SaveContextServletOutputStream.write(OnCommittedResponseWrapper.java:632)
	at org.springframework.security.web.util.OnCommittedResponseWrapper$SaveContextServletOutputStream.write(OnCommittedResponseWrapper.java:632)
	at org.springframework.util.StreamUtils.copy(StreamUtils.java:129)
	at org.springframework.http.converter.ByteArrayHttpMessageConverter.writeInternal(ByteArrayHttpMessageConverter.java:70)
	at org.springframework.http.converter.ByteArrayHttpMessageConverter.writeInternal(ByteArrayHttpMessageConverter.java:39)
	at org.springframework.http.converter.AbstractHttpMessageConverter.write(AbstractHttpMessageConverter.java:227)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:293)
	at org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor.handleReturnValue(HttpEntityMethodProcessor.java:219)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:124)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1064)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:228)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:83)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:218)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:142)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:82)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1723)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.io.IOException: 你的主机中的软件中止了一个已建立的连接。
	at sun.nio.ch.SocketDispatcher.write0(Native Method)
	at sun.nio.ch.SocketDispatcher.write(SocketDispatcher.java:51)
	at sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:93)
	at sun.nio.ch.IOUtil.write(IOUtil.java:65)
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:469)
	at org.apache.tomcat.util.net.NioChannel.write(NioChannel.java:135)
	at org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.doWrite(NioEndpoint.java:1364)
	at org.apache.tomcat.util.net.SocketWrapperBase.doWrite(SocketWrapperBase.java:766)
	at org.apache.tomcat.util.net.SocketWrapperBase.writeBlocking(SocketWrapperBase.java:586)
	at org.apache.tomcat.util.net.SocketWrapperBase.write(SocketWrapperBase.java:530)
	at org.apache.coyote.http11.Http11OutputBuffer$SocketOutputBuffer.doWrite(Http11OutputBuffer.java:547)
	at org.apache.coyote.http11.filters.IdentityOutputFilter.doWrite(IdentityOutputFilter.java:73)
	at org.apache.coyote.http11.Http11OutputBuffer.doWrite(Http11OutputBuffer.java:194)
	at org.apache.coyote.Response.doWrite(Response.java:615)
	at org.apache.catalina.connector.OutputBuffer.realWriteBytes(OutputBuffer.java:340)
	... 112 common frames omitted
2022-03-02 11:05:05,779 [http-nio-8082-exec-6] WARN  -[ExceptionHandlerExceptionResolver.java:434]- Failure in @ExceptionHandler com.liyuehong.weeklyreport.configuration.CustomGlobalExceptionHandler#handleAppException(Exception, HttpServletRequest)
java.lang.ClassCastException: org.apache.catalina.connector.ClientAbortException cannot be cast to com.liyuehong.weeklyreport.configuration.CustomException
	at com.liyuehong.weeklyreport.configuration.CustomGlobalExceptionHandler.handleAppException(CustomGlobalExceptionHandler.java:37)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:428)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:75)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:141)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1324)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1135)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:228)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:83)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:218)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:142)
	at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:82)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:190)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:163)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1723)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2022-03-02 11:05:09,770 [http-nio-8082-exec-5] DEBUG -[BaseJdbcLogger.java:137]- ==>  Preparing: select id, username, password, enabled, email, regTime, avatar_name from user where username=?
2022-03-02 11:05:09,771 [http-nio-8082-exec-5] DEBUG -[BaseJdbcLogger.java:137]- ==> Parameters: admin(String)
2022-03-02 11:05:09,846 [http-nio-8082-exec-5] TRACE -[BaseJdbcLogger.java:143]- <==    Columns: id, username, password, enabled, email, regTime, avatar_name
2022-03-02 11:05:09,847 [http-nio-8082-exec-5] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 1, admin, $2a$16$Fnenz3KKbv8Mh7N6CB2c5uTK8a4JC3wUe/sDV7z8n1Uq1vJdaUZYS, 1, null, null, 2022-02-26b0127966d90d4ace9f4253ab69563fd0.png
2022-03-02 11:05:09,848 [http-nio-8082-exec-5] DEBUG -[BaseJdbcLogger.java:137]- <==      Total: 1
2022-03-02 11:05:09,849 [http-nio-8082-exec-5] DEBUG -[BaseJdbcLogger.java:137]- ==>  Preparing: SELECT r.* FROM role AS r,user_role AS ur WHERE r.id = ur.`role_id` AND ur.`user_id`=?;
2022-03-02 11:05:09,850 [http-nio-8082-exec-5] DEBUG -[BaseJdbcLogger.java:137]- ==> Parameters: 1(Integer)
2022-03-02 11:05:09,927 [http-nio-8082-exec-5] TRACE -[BaseJdbcLogger.java:143]- <==    Columns: id, nameZh, name
2022-03-02 11:05:09,928 [http-nio-8082-exec-5] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 1, 管理员, admin
2022-03-02 11:05:09,928 [http-nio-8082-exec-5] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 2, 普通用户, user
2022-03-02 11:05:09,929 [http-nio-8082-exec-5] DEBUG -[BaseJdbcLogger.java:137]- <==      Total: 2
2022-03-02 11:05:18,078 [http-nio-8082-exec-9] DEBUG -[ArticleController.java:77]- 2022-03-02
2022-03-02 11:05:18,079 [http-nio-8082-exec-9] DEBUG -[BaseJdbcLogger.java:137]- ==>  Preparing: select article.id, title, editDate, publishDate, uid, state , content ,user.username as author from article,user where DATE_FORMAT(publishDate,'%Y-%m-%d') BETWEEN ? AND ? and user.id=article.uid
2022-03-02 11:05:18,080 [http-nio-8082-exec-9] DEBUG -[BaseJdbcLogger.java:137]- ==> Parameters: 2022-02-28(String), 2022-03-06(String)
2022-03-02 11:05:18,157 [http-nio-8082-exec-9] TRACE -[BaseJdbcLogger.java:143]- <==    Columns: id, title, editDate, publishDate, uid, state, content, author
2022-03-02 11:05:18,158 [http-nio-8082-exec-9] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 1, 第一周周报, null, 2022-03-01 19:30:19, 1, null, <<BLOB>>, admin
2022-03-02 11:05:18,159 [http-nio-8082-exec-9] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 58, 第二周, null, 2022-03-01 19:30:33, 1, null, <<BLOB>>, admin
2022-03-02 11:05:18,160 [http-nio-8082-exec-9] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 59, grgewgf, null, 2022-03-01 21:38:33, 1, null, <<BLOB>>, admin
2022-03-02 11:05:18,161 [http-nio-8082-exec-9] DEBUG -[BaseJdbcLogger.java:137]- <==      Total: 3
2022-03-02 11:13:10,495 [http-nio-8082-exec-7] DEBUG -[BaseJdbcLogger.java:137]- ==>  Preparing: select id, username, password, enabled, email, regTime, avatar_name from user where username=?
2022-03-02 11:13:10,496 [http-nio-8082-exec-7] DEBUG -[BaseJdbcLogger.java:137]- ==> Parameters: admin(String)
2022-03-02 11:13:10,578 [http-nio-8082-exec-7] TRACE -[BaseJdbcLogger.java:143]- <==    Columns: id, username, password, enabled, email, regTime, avatar_name
2022-03-02 11:13:10,578 [http-nio-8082-exec-7] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 1, admin, $2a$16$Fnenz3KKbv8Mh7N6CB2c5uTK8a4JC3wUe/sDV7z8n1Uq1vJdaUZYS, 1, null, null, 2022-02-26b0127966d90d4ace9f4253ab69563fd0.png
2022-03-02 11:13:10,580 [http-nio-8082-exec-7] DEBUG -[BaseJdbcLogger.java:137]- <==      Total: 1
2022-03-02 11:13:10,581 [http-nio-8082-exec-7] DEBUG -[BaseJdbcLogger.java:137]- ==>  Preparing: SELECT r.* FROM role AS r,user_role AS ur WHERE r.id = ur.`role_id` AND ur.`user_id`=?;
2022-03-02 11:13:10,581 [http-nio-8082-exec-7] DEBUG -[BaseJdbcLogger.java:137]- ==> Parameters: 1(Integer)
2022-03-02 11:13:10,663 [http-nio-8082-exec-7] TRACE -[BaseJdbcLogger.java:143]- <==    Columns: id, nameZh, name
2022-03-02 11:13:10,664 [http-nio-8082-exec-7] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 1, 管理员, admin
2022-03-02 11:13:10,665 [http-nio-8082-exec-7] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 2, 普通用户, user
2022-03-02 11:13:10,665 [http-nio-8082-exec-7] DEBUG -[BaseJdbcLogger.java:137]- <==      Total: 2
2022-03-02 11:13:18,179 [http-nio-8082-exec-4] DEBUG -[BaseJdbcLogger.java:137]- ==>  Preparing: SELECT u.`id` AS uid,u.username,u.`enabled`,u.`email`,u.`regTime`,u.`avatar_name` AS avatarName,r.`id` AS rid,r.`name` AS englishName,r.`nameZh` AS chineseName FROM `user` AS u, role AS r, user_role AS ur WHERE u.`id`=ur.`user_id` AND r.`id`=ur.`role_id`
2022-03-02 11:13:18,180 [http-nio-8082-exec-4] DEBUG -[BaseJdbcLogger.java:137]- ==> Parameters: 
2022-03-02 11:13:18,259 [http-nio-8082-exec-4] TRACE -[BaseJdbcLogger.java:143]- <==    Columns: uid, username, enabled, email, regTime, avatarName, rid, englishName, chineseName
2022-03-02 11:13:18,259 [http-nio-8082-exec-4] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 6, yuehongli, 1, null, 2022-02-04 15:38:52, null, 1, admin, 管理员
2022-03-02 11:13:18,260 [http-nio-8082-exec-4] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 1, admin, 1, null, null, 2022-02-26b0127966d90d4ace9f4253ab69563fd0.png, 1, admin, 管理员
2022-03-02 11:13:18,261 [http-nio-8082-exec-4] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 1, admin, 1, null, null, 2022-02-26b0127966d90d4ace9f4253ab69563fd0.png, 2, user, 普通用户
2022-03-02 11:13:18,261 [http-nio-8082-exec-4] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 10, 胡玉, 1, 1111111@qq.com, 2022-02-11 21:12:06, null, 1, admin, 管理员
2022-03-02 11:13:18,261 [http-nio-8082-exec-4] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 10, 胡玉, 1, 1111111@qq.com, 2022-02-11 21:12:06, null, 2, user, 普通用户
2022-03-02 11:13:18,261 [http-nio-8082-exec-4] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 12, asmin, 1, string4774, 2022-02-23 22:27:05, null, 2, user, 普通用户
2022-03-02 11:13:18,261 [http-nio-8082-exec-4] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 5, hyw, 1, null, 2022-01-30 18:18:06, 2022-02-132d0e213d5c354b579f66f31b37cfe920.png, 2, user, 普通用户
2022-03-02 11:13:18,263 [http-nio-8082-exec-4] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 13, fsfsfsfs, 1, yhli394@163.com, 2022-03-01 21:23:16, null, 2, user, 普通用户
2022-03-02 11:13:18,263 [http-nio-8082-exec-4] DEBUG -[BaseJdbcLogger.java:137]- <==      Total: 8
2022-03-02 11:13:18,509 [http-nio-8082-exec-6] DEBUG -[ArticleController.java:77]- 2022-03-02
2022-03-02 11:13:18,511 [http-nio-8082-exec-6] DEBUG -[BaseJdbcLogger.java:137]- ==>  Preparing: select article.id, title, editDate, publishDate, uid, state , content ,user.username as author from article,user where DATE_FORMAT(publishDate,'%Y-%m-%d') BETWEEN ? AND ? and user.id=article.uid
2022-03-02 11:13:18,511 [http-nio-8082-exec-6] DEBUG -[BaseJdbcLogger.java:137]- ==> Parameters: 2022-02-28(String), 2022-03-06(String)
2022-03-02 11:13:18,585 [http-nio-8082-exec-6] TRACE -[BaseJdbcLogger.java:143]- <==    Columns: id, title, editDate, publishDate, uid, state, content, author
2022-03-02 11:13:18,586 [http-nio-8082-exec-6] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 1, 第一周周报, null, 2022-03-01 19:30:19, 1, null, <<BLOB>>, admin
2022-03-02 11:13:18,588 [http-nio-8082-exec-6] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 58, 第二周, null, 2022-03-01 19:30:33, 1, null, <<BLOB>>, admin
2022-03-02 11:13:18,589 [http-nio-8082-exec-6] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 59, grgewgf, null, 2022-03-01 21:38:33, 1, null, <<BLOB>>, admin
2022-03-02 11:13:18,590 [http-nio-8082-exec-6] DEBUG -[BaseJdbcLogger.java:137]- <==      Total: 3
2022-03-02 11:23:45,693 [main] INFO  -[AbstractTestContextBootstrapper.java:305]- Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.liyuehong.weeklyreport.ExceptionTest], using SpringBootContextLoader
2022-03-02 11:23:45,700 [main] INFO  -[AbstractContextLoader.java:264]- Could not detect default resource locations for test class [com.liyuehong.weeklyreport.ExceptionTest]: no resource found for suffixes {-context.xml, Context.groovy}.
2022-03-02 11:23:45,701 [main] INFO  -[AnnotationConfigContextLoaderUtils.java:83]- Could not detect default configuration classes for test class [com.liyuehong.weeklyreport.ExceptionTest]: ExceptionTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2022-03-02 11:23:45,874 [main] INFO  -[SpringBootTestContextBootstrapper.java:238]- Found @SpringBootConfiguration com.liyuehong.weeklyreport.WeeklyReportApplication for test class com.liyuehong.weeklyreport.ExceptionTest
2022-03-02 11:23:46,008 [main] INFO  -[AbstractTestContextBootstrapper.java:245]- Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
2022-03-02 11:23:46,039 [main] INFO  -[AbstractTestContextBootstrapper.java:174]- Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@e3c0e40, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@329dbdbf, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@7354b8c5, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@20d7d6fb, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@4ef782af, org.springframework.test.context.support.DirtiesContextTestExecutionListener@11d8ae8b, org.springframework.test.context.transaction.TransactionalTestExecutionListener@479cbee5, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@59e2d8e3, org.springframework.test.context.event.EventPublishingTestExecutionListener@2b72cb8a, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@7f8a9499, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@5d43661b, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@12299890, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@2fba3fc4, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@4bf48f6, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@420a85c4]
2022-03-02 11:23:46,453 [main] INFO  -[StartupInfoLogger.java:55]- Starting ExceptionTest using Java 1.8.0_241 on DESKTOP-AF5B2DF with PID 11728 (started by yhli3 in E:\MyGitHubRepository\WeeklyReport)
2022-03-02 11:23:46,454 [main] DEBUG -[StartupInfoLogger.java:56]- Running with Spring Boot v2.5.3, Spring v5.3.9
2022-03-02 11:23:46,455 [main] INFO  -[SpringApplication.java:659]- No active profile set, falling back to default profiles: default
2022-03-02 11:23:47,874 [main] INFO  -[RepositoryConfigurationDelegate.java:262]- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-03-02 11:23:47,877 [main] INFO  -[RepositoryConfigurationDelegate.java:132]- Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-03-02 11:23:47,911 [main] INFO  -[RepositoryConfigurationDelegate.java:201]- Finished Spring Data repository scanning in 17 ms. Found 0 Redis repository interfaces.
2022-03-02 11:23:48,455 [main] INFO  -[PostProcessorRegistrationDelegate.java:376]- Bean 'redisConfig' of type [com.liyuehong.weeklyreport.configuration.RedisConfig$$EnhancerBySpringCGLIB$$2ec9c41f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-02 11:23:49,218 [main] INFO  -[DruidDataSourceAutoConfigure.java:56]- Init DruidDataSource
2022-03-02 11:23:49,553 [main] INFO  -[DruidDataSource.java:930]- {dataSource-1} inited
2022-03-02 11:23:51,118 [main] INFO  -[EndpointLinksResolver.java:58]- Exposing 1 endpoint(s) beneath base path '/actuator'
2022-03-02 11:23:51,292 [main] INFO  -[RedisConfig.java:113]- 初始化 -> [Redis CacheErrorHandler]
2022-03-02 11:23:51,500 [main] INFO  -[DefaultSecurityFilterChain.java:51]- Will secure Ant [pattern='/js/**'] with []
2022-03-02 11:23:51,500 [main] INFO  -[DefaultSecurityFilterChain.java:51]- Will secure Ant [pattern='/css/**'] with []
2022-03-02 11:23:51,501 [main] INFO  -[DefaultSecurityFilterChain.java:51]- Will secure Ant [pattern='/images/**'] with []
2022-03-02 11:23:51,501 [main] INFO  -[DefaultSecurityFilterChain.java:51]- Will secure Ant [pattern='/swagger-ui.html'] with []
2022-03-02 11:23:51,501 [main] INFO  -[DefaultSecurityFilterChain.java:51]- Will secure Ant [pattern='/webjars/**'] with []
2022-03-02 11:23:51,502 [main] INFO  -[DefaultSecurityFilterChain.java:51]- Will secure Ant [pattern='/v2/**'] with []
2022-03-02 11:23:51,502 [main] INFO  -[DefaultSecurityFilterChain.java:51]- Will secure Ant [pattern='/swagger-resources/**'] with []
2022-03-02 11:23:51,811 [main] INFO  -[PropertySourcedRequestMappingHandlerMapping.java:69]- Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2022-03-02 11:23:51,987 [main] INFO  -[DefaultSecurityFilterChain.java:51]- Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6231f77a, org.springframework.security.web.context.SecurityContextPersistenceFilter@23ec2bdc, org.springframework.security.web.header.HeaderWriterFilter@78d6c244, org.springframework.web.filter.CorsFilter@290c266c, org.springframework.security.web.authentication.logout.LogoutFilter@37d3aa8c, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@14201a90, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3d132bb6, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@238ad211, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@75b363c3, org.springframework.security.web.session.SessionManagementFilter@16e907b6, org.springframework.security.web.access.ExceptionTranslationFilter@3fd33f48, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@760a2b6e]
2022-03-02 11:23:53,849 [main] INFO  -[MockServletContext.java:455]- Initializing Spring TestDispatcherServlet ''
2022-03-02 11:23:53,850 [main] INFO  -[FrameworkServlet.java:525]- Initializing Servlet ''
2022-03-02 11:23:53,852 [main] INFO  -[FrameworkServlet.java:547]- Completed initialization in 2 ms
2022-03-02 11:23:53,889 [main] INFO  -[DocumentationPluginsBootstrapper.java:160]- Context refreshed
2022-03-02 11:23:53,915 [main] INFO  -[DocumentationPluginsBootstrapper.java:163]- Found 1 custom documentation plugin(s)
2022-03-02 11:23:53,950 [main] INFO  -[ApiListingReferenceScanner.java:41]- Scanning for api listing references
2022-03-02 11:23:54,073 [main] WARN  -[ParameterDataTypeReader.java:92]- Trying to infer dataType int[]
2022-03-02 11:23:54,801 [main] INFO  -[ScheduledAnnotationBeanPostProcessor.java:309]- No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2022-03-02 11:23:54,814 [main] INFO  -[StartupInfoLogger.java:61]- Started ExceptionTest in 8.724 seconds (JVM running for 10.394)
2022-03-02 11:23:56,106 [main] DEBUG -[BaseJdbcLogger.java:137]- ==>  Preparing: select id, username, password, enabled, email, regTime, avatar_name from user where username=?
2022-03-02 11:23:56,179 [main] DEBUG -[BaseJdbcLogger.java:137]- ==> Parameters: admin(String)
2022-03-02 11:23:56,286 [main] TRACE -[BaseJdbcLogger.java:143]- <==    Columns: id, username, password, enabled, email, regTime, avatar_name
2022-03-02 11:23:56,286 [main] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 1, admin, $2a$16$Fnenz3KKbv8Mh7N6CB2c5uTK8a4JC3wUe/sDV7z8n1Uq1vJdaUZYS, 1, null, null, 2022-02-26b0127966d90d4ace9f4253ab69563fd0.png
2022-03-02 11:23:56,289 [main] DEBUG -[BaseJdbcLogger.java:137]- <==      Total: 1
2022-03-02 11:23:56,294 [main] DEBUG -[BaseJdbcLogger.java:137]- ==>  Preparing: SELECT r.* FROM role AS r,user_role AS ur WHERE r.id = ur.`role_id` AND ur.`user_id`=?;
2022-03-02 11:23:56,295 [main] DEBUG -[BaseJdbcLogger.java:137]- ==> Parameters: 1(Integer)
2022-03-02 11:23:56,366 [main] TRACE -[BaseJdbcLogger.java:143]- <==    Columns: id, nameZh, name
2022-03-02 11:23:56,367 [main] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 1, 管理员, admin
2022-03-02 11:23:56,367 [main] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 2, 普通用户, user
2022-03-02 11:23:56,368 [main] DEBUG -[BaseJdbcLogger.java:137]- <==      Total: 2
2022-03-02 11:24:03,501 [main] INFO  -[AbstractTestContextBootstrapper.java:305]- Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.liyuehong.weeklyreport.WeeklyReportApplicationTests], using SpringBootContextLoader
2022-03-02 11:24:03,502 [main] INFO  -[AbstractContextLoader.java:264]- Could not detect default resource locations for test class [com.liyuehong.weeklyreport.WeeklyReportApplicationTests]: no resource found for suffixes {-context.xml, Context.groovy}.
2022-03-02 11:24:03,503 [main] INFO  -[AnnotationConfigContextLoaderUtils.java:83]- Could not detect default configuration classes for test class [com.liyuehong.weeklyreport.WeeklyReportApplicationTests]: WeeklyReportApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2022-03-02 11:24:03,508 [main] INFO  -[SpringBootTestContextBootstrapper.java:238]- Found @SpringBootConfiguration com.liyuehong.weeklyreport.WeeklyReportApplication for test class com.liyuehong.weeklyreport.WeeklyReportApplicationTests
2022-03-02 11:24:03,513 [main] INFO  -[AbstractTestContextBootstrapper.java:245]- Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
2022-03-02 11:24:03,514 [main] INFO  -[AbstractTestContextBootstrapper.java:174]- Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@510a2c7, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@14fe085b, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@1ea19c97, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@525b9df4, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@52dd1be2, org.springframework.test.context.support.DirtiesContextTestExecutionListener@36857d32, org.springframework.test.context.transaction.TransactionalTestExecutionListener@24520a51, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@2ae88712, org.springframework.test.context.event.EventPublishingTestExecutionListener@10508ba6, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@da11873, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@39159b14, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@57ab4b33, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@43b2e7db, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@46d51d5e, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@530df3ab]
2022-03-02 11:24:03,570 [main] INFO  -[StartupInfoLogger.java:55]- Starting WeeklyReportApplicationTests using Java 1.8.0_241 on DESKTOP-AF5B2DF with PID 11728 (started by yhli3 in E:\MyGitHubRepository\WeeklyReport)
2022-03-02 11:24:03,571 [main] DEBUG -[StartupInfoLogger.java:56]- Running with Spring Boot v2.5.3, Spring v5.3.9
2022-03-02 11:24:03,572 [main] INFO  -[SpringApplication.java:659]- No active profile set, falling back to default profiles: default
2022-03-02 11:24:04,083 [main] INFO  -[RepositoryConfigurationDelegate.java:262]- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-03-02 11:24:04,084 [main] INFO  -[RepositoryConfigurationDelegate.java:132]- Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-03-02 11:24:04,092 [main] INFO  -[RepositoryConfigurationDelegate.java:201]- Finished Spring Data repository scanning in 7 ms. Found 0 Redis repository interfaces.
2022-03-02 11:24:04,189 [main] INFO  -[PostProcessorRegistrationDelegate.java:376]- Bean 'redisConfig' of type [com.liyuehong.weeklyreport.configuration.RedisConfig$$EnhancerBySpringCGLIB$$2ec9c41f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-03-02 11:24:04,430 [main] INFO  -[DruidDataSourceAutoConfigure.java:56]- Init DruidDataSource
2022-03-02 11:24:04,482 [main] INFO  -[DruidDataSource.java:930]- {dataSource-2} inited
2022-03-02 11:24:04,947 [main] INFO  -[EndpointLinksResolver.java:58]- Exposing 1 endpoint(s) beneath base path '/actuator'
2022-03-02 11:24:05,044 [main] INFO  -[RedisConfig.java:113]- 初始化 -> [Redis CacheErrorHandler]
2022-03-02 11:24:05,080 [main] INFO  -[DefaultSecurityFilterChain.java:51]- Will secure Ant [pattern='/js/**'] with []
2022-03-02 11:24:05,081 [main] INFO  -[DefaultSecurityFilterChain.java:51]- Will secure Ant [pattern='/css/**'] with []
2022-03-02 11:24:05,081 [main] INFO  -[DefaultSecurityFilterChain.java:51]- Will secure Ant [pattern='/images/**'] with []
2022-03-02 11:24:05,081 [main] INFO  -[DefaultSecurityFilterChain.java:51]- Will secure Ant [pattern='/swagger-ui.html'] with []
2022-03-02 11:24:05,081 [main] INFO  -[DefaultSecurityFilterChain.java:51]- Will secure Ant [pattern='/webjars/**'] with []
2022-03-02 11:24:05,082 [main] INFO  -[DefaultSecurityFilterChain.java:51]- Will secure Ant [pattern='/v2/**'] with []
2022-03-02 11:24:05,082 [main] INFO  -[DefaultSecurityFilterChain.java:51]- Will secure Ant [pattern='/swagger-resources/**'] with []
2022-03-02 11:24:05,186 [main] INFO  -[PropertySourcedRequestMappingHandlerMapping.java:69]- Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2022-03-02 11:24:05,252 [main] INFO  -[DefaultSecurityFilterChain.java:51]- Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1fce6eb4, org.springframework.security.web.context.SecurityContextPersistenceFilter@18ad085a, org.springframework.security.web.header.HeaderWriterFilter@2e488e45, org.springframework.web.filter.CorsFilter@7d44eab, org.springframework.security.web.authentication.logout.LogoutFilter@3e0e3048, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@629fe84, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@15ea0ca3, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7f3a92fd, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@35e7fcf2, org.springframework.security.web.session.SessionManagementFilter@396519b, org.springframework.security.web.access.ExceptionTranslationFilter@17635531, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4e212f46]
2022-03-02 11:24:05,882 [main] INFO  -[DocumentationPluginsBootstrapper.java:160]- Context refreshed
2022-03-02 11:24:05,883 [main] INFO  -[DocumentationPluginsBootstrapper.java:163]- Found 1 custom documentation plugin(s)
2022-03-02 11:24:05,889 [main] INFO  -[ApiListingReferenceScanner.java:41]- Scanning for api listing references
2022-03-02 11:24:05,903 [main] WARN  -[ParameterDataTypeReader.java:92]- Trying to infer dataType int[]
2022-03-02 11:24:06,577 [main] INFO  -[ScheduledAnnotationBeanPostProcessor.java:309]- No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2022-03-02 11:24:06,579 [main] INFO  -[StartupInfoLogger.java:61]- Started WeeklyReportApplicationTests in 3.062 seconds (JVM running for 22.159)
2022-03-02 11:24:07,009 [SpringApplicationShutdownHook] INFO  -[DruidDataSource.java:1825]- {dataSource-1} closed
2022-03-02 11:24:07,288 [SpringApplicationShutdownHook] INFO  -[DruidDataSource.java:1825]- {dataSource-2} closed
2022-03-02 11:24:08,350 [http-nio-8082-exec-10] DEBUG -[ArticleController.java:77]- 2022-03-02
2022-03-02 11:24:08,416 [http-nio-8082-exec-10] DEBUG -[BaseJdbcLogger.java:137]- ==>  Preparing: select article.id, title, editDate, publishDate, uid, state , content ,user.username as author from article,user where DATE_FORMAT(publishDate,'%Y-%m-%d') BETWEEN ? AND ? and user.id=article.uid
2022-03-02 11:24:08,417 [http-nio-8082-exec-10] DEBUG -[BaseJdbcLogger.java:137]- ==> Parameters: 2022-02-28(String), 2022-03-06(String)
2022-03-02 11:24:08,491 [http-nio-8082-exec-10] TRACE -[BaseJdbcLogger.java:143]- <==    Columns: id, title, editDate, publishDate, uid, state, content, author
2022-03-02 11:24:08,492 [http-nio-8082-exec-10] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 1, 第一周周报, null, 2022-03-01 19:30:19, 1, null, <<BLOB>>, admin
2022-03-02 11:24:08,493 [http-nio-8082-exec-10] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 58, 第二周, null, 2022-03-01 19:30:33, 1, null, <<BLOB>>, admin
2022-03-02 11:24:08,494 [http-nio-8082-exec-10] TRACE -[BaseJdbcLogger.java:143]- <==        Row: 59, grgewgf, null, 2022-03-01 21:38:33, 1, null, <<BLOB>>, admin
2022-03-02 11:24:08,495 [http-nio-8082-exec-10] DEBUG -[BaseJdbcLogger.java:137]- <==      Total: 3
